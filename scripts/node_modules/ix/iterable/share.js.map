{"version":3,"sources":["iterable/share.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AACxC,qCAAkC;AAElC,MAAM,cAAkB,SAAQ,qBAAY;IAG1C,YAAY,EAAe;QACzB,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAED,CAAC,MAAM,CAAC,QAAQ,CAAC;QACf,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;CACF;AAOD,SAAgB,KAAK,CACnB,MAAyB,EACzB,EAAoD;IAEpD,OAAO,EAAE;QACP,CAAC,CAAC,eAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;QACpF,CAAC,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACpD,CAAC;AAPD,sBAOC","file":"share.js","sourcesContent":["import { IterableX } from './iterablex';\nimport { create } from './create';\n\nclass SharedIterable<T> extends IterableX<T> {\n  private _it: Iterator<T>;\n\n  constructor(it: Iterator<T>) {\n    super();\n    this._it = it;\n  }\n\n  [Symbol.iterator]() {\n    return this._it;\n  }\n}\n\nexport function share<TSource>(source: Iterable<TSource>): IterableX<TSource>;\nexport function share<TSource, TResult>(\n  source: Iterable<TSource>,\n  fn?: (value: Iterable<TSource>) => Iterable<TResult>\n): IterableX<TResult>;\nexport function share<TSource, TResult>(\n  source: Iterable<TSource>,\n  fn?: (value: Iterable<TSource>) => Iterable<TResult>\n): IterableX<TSource | TResult> {\n  return fn\n    ? create(() => fn(new SharedIterable(source[Symbol.iterator]()))[Symbol.iterator]())\n    : new SharedIterable(source[Symbol.iterator]());\n}\n"]}