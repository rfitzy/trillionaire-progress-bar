{"version":3,"sources":["iterable/elementat.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,MAAM,UAAU,SAAS,CAAI,MAAmB,EAAE,KAAa;IAC7D,KAAK,IAAI,IAAI,IAAI,MAAM,EAAE;QACvB,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QACD,KAAK,EAAE,CAAC;KACT;IACD,OAAO,SAAS,CAAC;AACnB,CAAC","file":"elementat.js","sourcesContent":["/**\n * Returns the element at a specified index in a sequence or undefined if the index is out of range.\n * @param {Iterable<T>} source The source sequence.\n * @param {number} index The zero-based index of the element to retrieve.\n * @return {T} undefined if the index is outside the bounds of the source sequence; otherwise, the element at the\n * specified position in the source sequence.\n */\nexport function elementAt<T>(source: Iterable<T>, index: number) {\n  for (let item of source) {\n    if (index === 0) {\n      return item;\n    }\n    index--;\n  }\n  return undefined;\n}\n"]}