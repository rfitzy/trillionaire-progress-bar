{"version":3,"sources":["iterable/defaultifempty.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AAExC,MAAa,sBAAgC,SAAQ,qBAAkB;IAIrE,YAAY,MAAyB,EAAE,YAAqB;QAC1D,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChB,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAC7B,KAAK,GAAG,CAAC,CAAC;YACV,MAAM,IAAI,CAAC;SACZ;QACD,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,MAAM,IAAI,CAAC,aAAa,CAAC;SAC1B;IACH,CAAC;CACF;AApBD,wDAoBC;AAED;;;;;GAKG;AACH,SAAgB,cAAc,CAAI,MAAmB,EAAE,YAAe;IACpE,OAAO,IAAI,sBAAsB,CAAI,MAAM,EAAE,YAAY,CAAC,CAAC;AAC7D,CAAC;AAFD,wCAEC","file":"defaultifempty.js","sourcesContent":["import { IterableX } from './iterablex';\n\nexport class DefaultIfEmptyIterable<TSource> extends IterableX<TSource> {\n  private _source: Iterable<TSource>;\n  private _defaultValue: TSource;\n\n  constructor(source: Iterable<TSource>, defaultValue: TSource) {\n    super();\n    this._source = source;\n    this._defaultValue = defaultValue;\n  }\n\n  *[Symbol.iterator]() {\n    let state = 1;\n    for (let item of this._source) {\n      state = 2;\n      yield item;\n    }\n    if (state === 1) {\n      yield this._defaultValue;\n    }\n  }\n}\n\n/**\n * Returns the elements of the specified sequence or the type parameter's default value in a singleton collection if the sequence is empty.\n * @param {Iterable<T>} source The sequence to return a default value for if it is empty.\n * @param {T} defaultValue The default value if the sequence is empty.\n * @return An that contains the default value if source is empty; otherwise, source.\n */\nexport function defaultIfEmpty<T>(source: Iterable<T>, defaultValue: T): IterableX<T> {\n  return new DefaultIfEmptyIterable<T>(source, defaultValue);\n}\n"]}