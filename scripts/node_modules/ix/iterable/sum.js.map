{"version":3,"sources":["iterable/sum.ts"],"names":[],"mappings":";;AAAA,mDAAgD;AAIhD,SAAgB,GAAG,CAAC,MAAqB,EAAE,KAAyB,mBAAQ;IAC1E,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,KAAK,IAAI,IAAI,IAAI,MAAM,EAAE;QACvB,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;KACjB;IAED,OAAO,GAAG,CAAC;AACb,CAAC;AAPD,kBAOC","file":"sum.js","sourcesContent":["import { identity } from '../internal/identity';\n\nexport function sum(source: Iterable<number>, fn?: (x: number) => number): number;\nexport function sum<T>(source: Iterable<T>, fn: (x: T) => number): number;\nexport function sum(source: Iterable<any>, fn: (x: any) => number = identity): number {\n  let sum = 0;\n  for (let item of source) {\n    sum += fn(item);\n  }\n\n  return sum;\n}\n"]}