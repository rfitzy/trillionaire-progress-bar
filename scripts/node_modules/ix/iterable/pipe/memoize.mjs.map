{"version":3,"sources":["iterable/pipe/memoize.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,OAAO,IAAI,aAAa,EAAE,MAAM,YAAY,CAAC;AAOtD,MAAM,UAAU,OAAO,CACrB,cAAsB,CAAC,CAAC,EACxB,QAA0D;IAE1D,OAAO,SAAS,uBAAuB,CAAC,MAAyB;QAC/D,OAAO,aAAa,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC,CAAC;AACJ,CAAC","file":"memoize.js","sourcesContent":["import { OperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { memoize as memoizeStatic } from '../memoize';\n\nexport function memoize<TSource>(readerCount?: number): OperatorFunction<TSource, TSource>;\nexport function memoize<TSource, TResult>(\n  readerCount?: number,\n  selector?: (value: Iterable<TSource>) => Iterable<TResult>\n): OperatorFunction<TSource, TResult>;\nexport function memoize<TSource, TResult = TSource>(\n  readerCount: number = -1,\n  selector?: (value: Iterable<TSource>) => Iterable<TResult>\n): OperatorFunction<TSource, TSource | TResult> {\n  return function memoizeOperatorFunction(source: Iterable<TSource>): IterableX<TSource | TResult> {\n    return memoizeStatic(source, readerCount, selector);\n  };\n}\n"]}