{"version":3,"sources":["iterable/pipe/groupby.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAmB,qBAAqB,EAAE,MAAM,YAAY,CAAC;AACrF,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAcnD,MAAM,UAAU,OAAO,CACrB,WAAqC,EACrC,kBAA8C,QAAQ,EACtD,iBAAmE,qBAAqB;IAExF,OAAO,SAAS,uBAAuB,CAAC,MAAyB;QAC/D,OAAO,IAAI,eAAe,CACxB,MAAM,EACN,WAAW,EACX,eAAe,EACf,cAAc,CACf,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","file":"groupby.js","sourcesContent":["import { OperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { GroupByIterable, GroupedIterable, groupByResultIdentity } from '../groupby';\nimport { identity } from '../../internal/identity';\n\nexport function groupBy<TSource, TKey>(\n  keySelector: (value: TSource) => TKey\n): OperatorFunction<TSource, GroupedIterable<TKey, TSource>>;\nexport function groupBy<TSource, TKey, TValue>(\n  keySelector: (value: TSource) => TKey,\n  elementSelector?: (value: TSource) => TValue\n): OperatorFunction<TSource, GroupedIterable<TKey, TValue>>;\nexport function groupBy<TSource, TKey, TValue, TResult>(\n  keySelector: (value: TSource) => TKey,\n  elementSelector?: (value: TSource) => TValue,\n  resultSelector?: (key: TKey, values: Iterable<TValue>) => TResult\n): OperatorFunction<TSource, TResult>;\nexport function groupBy<TSource, TKey, TValue, TResult>(\n  keySelector: (value: TSource) => TKey,\n  elementSelector: (value: TSource) => TValue = identity,\n  resultSelector: (key: TKey, values: Iterable<TValue>) => TResult = groupByResultIdentity\n): OperatorFunction<TSource, TResult> {\n  return function groupByOperatorFunction(source: Iterable<TSource>): IterableX<TResult> {\n    return new GroupByIterable<TSource, TKey, TValue, TResult>(\n      source,\n      keySelector,\n      elementSelector,\n      resultSelector\n    );\n  };\n}\n"]}