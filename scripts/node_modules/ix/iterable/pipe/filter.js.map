{"version":3,"sources":["iterable/pipe/filter.ts"],"names":[],"mappings":";;AAEA,sCAA2C;AAC3C,8DAA2D;AAU3D,SAAgB,MAAM,CACpB,SAAqD,EACrD,OAAa;IAEb,OAAO,SAAS,sBAAsB,CAAC,MAAyB;QAC9D,OAAO,IAAI,uBAAc,CAAU,MAAM,EAAE,2BAAY,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC;AACJ,CAAC;AAPD,wBAOC","file":"filter.js","sourcesContent":["import { OperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { FilterIterable } from '../filter';\nimport { bindCallback } from '../../internal/bindcallback';\n\nexport function filter<T, S extends T>(\n  predicate: (value: T, index: number) => value is S,\n  thisArg?: any\n): OperatorFunction<T, S>;\nexport function filter<T>(\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): OperatorFunction<T, T>;\nexport function filter<TSource>(\n  predicate: (value: TSource, index: number) => boolean,\n  thisArg?: any\n): OperatorFunction<TSource, TSource> {\n  return function filterOperatorFunction(source: Iterable<TSource>): IterableX<TSource> {\n    return new FilterIterable<TSource>(source, bindCallback(predicate, thisArg, 2));\n  };\n}\n"]}