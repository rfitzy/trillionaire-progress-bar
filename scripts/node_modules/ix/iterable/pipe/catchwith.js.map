{"version":3,"sources":["iterable/pipe/catchwith.ts"],"names":[],"mappings":";;AAEA,4CAAiD;AAEjD,SAAgB,SAAS,CACvB,OAA0C;IAE1C,OAAO,SAAS,yBAAyB,CAAC,MAAyB;QACjE,OAAO,IAAI,6BAAiB,CAAU,MAAM,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC,CAAC;AACJ,CAAC;AAND,8BAMC","file":"catchwith.js","sourcesContent":["import { MonoTypeOperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { CatchWithIterable } from '../catchwith';\n\nexport function catchWith<TSource>(\n  handler: (error: any) => Iterable<TSource>\n): MonoTypeOperatorFunction<TSource> {\n  return function catchWithOperatorFunction(source: Iterable<TSource>): IterableX<TSource> {\n    return new CatchWithIterable<TSource>(source, handler);\n  };\n}\n"]}