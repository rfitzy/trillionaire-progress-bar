{"version":3,"sources":["iterable/pipe/intersect.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,iBAAiB,EAAE,MAAM,cAAc,CAAC;AACjD,OAAO,EAAE,QAAQ,IAAI,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAEtE,MAAM,UAAU,SAAS,CACvB,MAAyB,EACzB,WAAgD,eAAe;IAE/D,OAAO,SAAS,yBAAyB,CAAC,KAAwB;QAChE,OAAO,IAAI,iBAAiB,CAAU,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACjE,CAAC,CAAC;AACJ,CAAC","file":"intersect.js","sourcesContent":["import { MonoTypeOperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { IntersectIterable } from '../intersect';\nimport { comparer as defaultComparer } from '../../internal/comparer';\n\nexport function intersect<TSource>(\n  second: Iterable<TSource>,\n  comparer: (x: TSource, y: TSource) => boolean = defaultComparer\n): MonoTypeOperatorFunction<TSource> {\n  return function intersectOperatorFunction(first: Iterable<TSource>): IterableX<TSource> {\n    return new IntersectIterable<TSource>(first, second, comparer);\n  };\n}\n"]}