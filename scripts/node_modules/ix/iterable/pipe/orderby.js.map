{"version":3,"sources":["iterable/pipe/orderby.ts"],"names":[],"mappings":";;AACA,wCAAoE;AACpE,kDAAgE;AAEhE,SAAgB,OAAO,CACrB,WAAoC,EACpC,WAA6C,eAAa;IAE1D,OAAO,SAAS,uBAAuB,CAAC,MAAyB;QAC/D,OAAO,IAAI,0BAAgB,CAAgB,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IACnF,CAAC,CAAC;AACJ,CAAC;AAPD,0BAOC;AAED,SAAgB,iBAAiB,CAC/B,WAAoC,EACpC,WAA6C,eAAa;IAE1D,OAAO,SAAS,iCAAiC,CAAC,MAAyB;QACzE,OAAO,IAAI,0BAAgB,CAAgB,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IAClF,CAAC,CAAC;AACJ,CAAC;AAPD,8CAOC;AAED,SAAgB,MAAM,CACpB,WAAoC,EACpC,WAA6C,eAAa;IAE1D,OAAO,SAAS,sBAAsB,CAAC,MAAyB;QAC9D,MAAM,WAAW,GAAkC,MAAM,CAAC;QAC1D,OAAO,IAAI,0BAAgB,CACzB,WAAW,CAAC,OAAO,EACnB,WAAW,EACX,QAAQ,EACR,KAAK,EACL,WAAW,CACZ,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAdD,wBAcC;AAED,SAAgB,gBAAgB,CAC9B,WAAoC,EACpC,WAA6C,eAAa;IAE1D,OAAO,SAAS,gCAAgC,CAAC,MAAyB;QACxE,MAAM,WAAW,GAAkC,MAAM,CAAC;QAC1D,OAAO,IAAI,0BAAgB,CACzB,WAAW,CAAC,OAAO,EACnB,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,WAAW,CACZ,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC;AAdD,4CAcC","file":"orderby.js","sourcesContent":["import { MonoTypeOperatorFunction } from '../../interfaces';\nimport { OrderedIterableX, OrderedIterableBaseX } from '../orderby';\nimport { sorter as defaultSorter } from '../../internal/sorter';\n\nexport function orderBy<TKey, TSource>(\n  keySelector: (item: TSource) => TKey,\n  comparer: (fst: TKey, snd: TKey) => number = defaultSorter\n): MonoTypeOperatorFunction<TSource> {\n  return function orderByOperatorFunction(source: Iterable<TSource>) {\n    return new OrderedIterableX<TKey, TSource>(source, keySelector, comparer, false);\n  };\n}\n\nexport function orderByDescending<TKey, TSource>(\n  keySelector: (item: TSource) => TKey,\n  comparer: (fst: TKey, snd: TKey) => number = defaultSorter\n): MonoTypeOperatorFunction<TSource> {\n  return function orderByDescendingOperatorFunction(source: Iterable<TSource>) {\n    return new OrderedIterableX<TKey, TSource>(source, keySelector, comparer, true);\n  };\n}\n\nexport function thenBy<TKey, TSource>(\n  keySelector: (item: TSource) => TKey,\n  comparer: (fst: TKey, snd: TKey) => number = defaultSorter\n): MonoTypeOperatorFunction<TSource> {\n  return function thenByOperatorFunction(source: Iterable<TSource>) {\n    const orderSource = <OrderedIterableBaseX<TSource>>source;\n    return new OrderedIterableX<TKey, TSource>(\n      orderSource._source,\n      keySelector,\n      comparer,\n      false,\n      orderSource\n    );\n  };\n}\n\nexport function thenByDescending<TKey, TSource>(\n  keySelector: (item: TSource) => TKey,\n  comparer: (fst: TKey, snd: TKey) => number = defaultSorter\n): MonoTypeOperatorFunction<TSource> {\n  return function thenByDescendingOperatorFunction(source: Iterable<TSource>) {\n    const orderSource = <OrderedIterableBaseX<TSource>>source;\n    return new OrderedIterableX<TKey, TSource>(\n      orderSource._source,\n      keySelector,\n      comparer,\n      true,\n      orderSource\n    );\n  };\n}\n"]}