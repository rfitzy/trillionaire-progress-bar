{"version":3,"sources":["iterable/pipe/union.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,aAAa,EAAE,MAAM,UAAU,CAAC;AACzC,OAAO,EAAE,QAAQ,IAAI,eAAe,EAAE,MAAM,yBAAyB,CAAC;AAEtE,MAAM,UAAU,KAAK,CACnB,KAAwB,EACxB,WAAgD,eAAe;IAE/D,OAAO,SAAS,qBAAqB,CAAC,IAAuB;QAC3D,OAAO,IAAI,aAAa,CAAU,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC3D,CAAC,CAAC;AACJ,CAAC","file":"union.js","sourcesContent":["import { MonoTypeOperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { UnionIterable } from '../union';\nimport { comparer as defaultComparer } from '../../internal/comparer';\n\nexport function union<TSource>(\n  right: Iterable<TSource>,\n  comparer: (x: TSource, y: TSource) => boolean = defaultComparer\n): MonoTypeOperatorFunction<TSource> {\n  return function unionOperatorFunction(left: Iterable<TSource>): IterableX<TSource> {\n    return new UnionIterable<TSource>(left, right, comparer);\n  };\n}\n"]}