{"version":3,"sources":["iterable/pipe/scan.ts"],"names":[],"mappings":";;AAEA,kCAAuC;AAUvC,SAAgB,IAAI,CAClB,WAA2E,EAC3E,GAAG,IAAS;IAEZ,OAAO,SAAS,oBAAoB,CAAC,MAAmB;QACtD,OAAO,IAAI,mBAAY,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC;AACJ,CAAC;AAPD,oBAOC","file":"scan.js","sourcesContent":["import { OperatorFunction } from '../../interfaces';\nimport { IterableX } from '../../iterable/iterablex';\nimport { ScanIterable } from '../scan';\n\nexport function scan<T, R = T>(\n  accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R,\n  seed?: never[]\n): OperatorFunction<T, R>;\nexport function scan<T, R = T>(\n  accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R,\n  seed?: R\n): OperatorFunction<T, R>;\nexport function scan<T, R = T>(\n  accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R,\n  ...seed: R[]\n): OperatorFunction<T, R> {\n  return function scanOperatorFunction(source: Iterable<T>): IterableX<R> {\n    return new ScanIterable(source, accumulator, seed);\n  };\n}\n"]}