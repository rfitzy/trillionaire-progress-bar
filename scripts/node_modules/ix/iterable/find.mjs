import { bindCallback } from '../internal/bindcallback';
export function find(source, predicate, thisArg) {
    if (typeof predicate !== 'function') {
        throw new TypeError();
    }
    const f = bindCallback(predicate, thisArg, 2);
    let i = 0;
    for (let item of source) {
        if (f(item, i++)) {
            return item;
        }
    }
    return undefined;
}

//# sourceMappingURL=find.mjs.map
