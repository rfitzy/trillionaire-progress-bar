{"version":3,"sources":["iterable/dowhile.ts"],"names":[],"mappings":";;AACA,qCAAwC;AACxC,mCAAiC;AAEjC;;;;;GAKG;AACH,SAAgB,OAAO,CACrB,MAAyB,EACzB,SAAwB;IAExB,OAAO,qBAAY,CAAC,MAAM,EAAE,cAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;AACzD,CAAC;AALD,0BAKC","file":"dowhile.js","sourcesContent":["import { IterableX } from './iterablex';\nimport { concatStatic } from './concat';\nimport { _while } from './while';\n\n/**\n * Generates an iterable sequence by repeating a source sequence as long as the given loop postcondition holds.\n * @param {Iterable<T>} source Source sequence to repeat while the condition evaluates true.\n * @param {function(): boolean} condition Loop condition.\n * @return {Iterable<T>} Sequence generated by repeating the given sequence until the condition evaluates to false.\n */\nexport function doWhile<TSource>(\n  source: Iterable<TSource>,\n  condition: () => boolean\n): IterableX<TSource> {\n  return concatStatic(source, _while(condition, source));\n}\n"]}