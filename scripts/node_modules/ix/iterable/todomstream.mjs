import { AsyncIterableX } from '../asynciterable/asynciterablex';
import { toDOMStream as asyncIterableToDOMStream } from '../asynciterable/todomstream';
// To work around circular-dependency hell, these need to be on
// the AsyncIterable prototype for tee, pipeTo, and pipeThrough
import '../add/iterable-operators/publish';
import '../add/iterable-operators/todomstream';
export function toDOMStream(source, options) {
    if (!options || !('type' in options) || options['type'] !== 'bytes') {
        return asyncIterableToDOMStream(AsyncIterableX.from(source), options);
    }
    return asyncIterableToDOMStream(AsyncIterableX.from(source), options);
}

//# sourceMappingURL=todomstream.mjs.map
