{"version":3,"sources":["iterable/mapasync.ts"],"names":[],"mappings":";;AAAA,oDAAkD;AAClD,2DAAwD;AAExD,MAAM,gBAAmC,SAAQ,8BAAuB;IAItE,YACE,MAAqE,EACrE,QAAuE;QAEvE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,EAAE,IAAI,IAAI,IAA4B,IAAI,CAAC,OAAO,EAAE;YAC3D,MAAM,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;SACvC;IACH,CAAC;CACF;AAED,SAAgB,QAAQ,CACtB,MAAqE,EACrE,QAAuE,EACvE,OAAa;IAEb,OAAO,IAAI,gBAAgB,CAAmB,MAAM,EAAE,2BAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5F,CAAC;AAND,4BAMC","file":"mapasync.js","sourcesContent":["import { AsyncIterableX } from '../asynciterable';\nimport { bindCallback } from '../internal/bindcallback';\n\nclass MapAsyncIterable<TSource, TResult> extends AsyncIterableX<TResult> {\n  private _source: Iterable<TSource | Promise<TSource>> | AsyncIterable<TSource>;\n  private _selector: (value: TSource, index: number) => TResult | Promise<TResult>;\n\n  constructor(\n    source: Iterable<TSource | Promise<TSource>> | AsyncIterable<TSource>,\n    selector: (value: TSource, index: number) => TResult | Promise<TResult>\n  ) {\n    super();\n    this._source = source;\n    this._selector = selector;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let i = 0;\n    for await (let item of <AsyncIterable<TSource>>this._source) {\n      yield await this._selector(item, i++);\n    }\n  }\n}\n\nexport function mapAsync<TSource, TResult>(\n  source: Iterable<TSource | Promise<TSource>> | AsyncIterable<TSource>,\n  selector: (value: TSource, index: number) => TResult | Promise<TResult>,\n  thisArg?: any\n): AsyncIterableX<TResult> {\n  return new MapAsyncIterable<TSource, TResult>(source, bindCallback(selector, thisArg, 2));\n}\n"]}