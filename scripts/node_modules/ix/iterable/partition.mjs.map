{"version":3,"sources":["iterable/partition.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAYlC,MAAM,UAAU,SAAS,CACvB,MAAmB,EACnB,SAA+C,EAC/C,OAAa;IAEb,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC;AACnG,CAAC","file":"partition.js","sourcesContent":["import { IterableX } from './iterablex';\nimport { filter } from './filter';\n\nexport function partition<T, S extends T>(\n  source: Iterable<T>,\n  predicate: (value: T, index: number) => value is S,\n  thisArg?: any\n): IterableX<S>[];\nexport function partition<T>(\n  source: Iterable<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): IterableX<T>[];\nexport function partition<T>(\n  source: Iterable<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): IterableX<T>[] {\n  return [filter(source, predicate, thisArg), filter(source, (x, i) => !predicate(x, i), thisArg)];\n}\n"]}