{"version":3,"sources":["iterable/map.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AACxC,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,MAAM,OAAO,WAA8B,SAAQ,SAAkB;IAInE,YAAY,MAAyB,EAAE,QAAoD;QACzF,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAC7B,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;SACjC;IACH,CAAC;CACF;AAED,MAAM,UAAU,GAAG,CACjB,MAAyB,EACzB,QAAoD,EACpD,OAAa;IAEb,OAAO,IAAI,WAAW,CAAmB,MAAM,EAAE,YAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC","file":"map.js","sourcesContent":["import { IterableX } from './iterablex';\nimport { bindCallback } from '../internal/bindcallback';\n\nexport class MapIterable<TSource, TResult> extends IterableX<TResult> {\n  private _source: Iterable<TSource>;\n  private _selector: (value: TSource, index: number) => TResult;\n\n  constructor(source: Iterable<TSource>, selector: (value: TSource, index: number) => TResult) {\n    super();\n    this._source = source;\n    this._selector = selector;\n  }\n\n  *[Symbol.iterator]() {\n    let i = 0;\n    for (let item of this._source) {\n      yield this._selector(item, i++);\n    }\n  }\n}\n\nexport function map<TSource, TResult>(\n  source: Iterable<TSource>,\n  selector: (value: TSource, index: number) => TResult,\n  thisArg?: any\n): IterableX<TResult> {\n  return new MapIterable<TSource, TResult>(source, bindCallback(selector, thisArg, 2));\n}\n"]}