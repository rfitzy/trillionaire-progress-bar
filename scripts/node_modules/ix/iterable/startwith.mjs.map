{"version":3,"sources":["iterable/startwith.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,OAAO,iBAA2B,SAAQ,SAAkB;IAIhE,YAAY,MAAyB,EAAE,IAAe;QACpD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;YACxB,MAAM,CAAC,CAAC;SACT;QACD,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAC7B,MAAM,IAAI,CAAC;SACZ;IACH,CAAC;CACF;AAED,MAAM,UAAU,SAAS,CACvB,MAAyB,EACzB,GAAG,IAAe;IAElB,OAAO,IAAI,iBAAiB,CAAU,MAAM,EAAE,IAAI,CAAC,CAAC;AACtD,CAAC","file":"startwith.js","sourcesContent":["import { IterableX } from './iterablex';\n\nexport class StartWithIterable<TSource> extends IterableX<TSource> {\n  private _source: Iterable<TSource>;\n  private _args: TSource[];\n\n  constructor(source: Iterable<TSource>, args: TSource[]) {\n    super();\n    this._source = source;\n    this._args = args;\n  }\n\n  *[Symbol.iterator]() {\n    for (let x of this._args) {\n      yield x;\n    }\n    for (let item of this._source) {\n      yield item;\n    }\n  }\n}\n\nexport function startWith<TSource>(\n  source: Iterable<TSource>,\n  ...args: TSource[]\n): IterableX<TSource> {\n  return new StartWithIterable<TSource>(source, args);\n}\n"]}