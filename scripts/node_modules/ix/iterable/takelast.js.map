{"version":3,"sources":["iterable/takelast.ts"],"names":[],"mappings":";;AAAA,2CAAwC;AAExC,MAAa,gBAA0B,SAAQ,qBAAkB;IAI/D,YAAY,MAAyB,EAAE,KAAa;QAClD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,GAAG,EAAe,CAAC;YACxB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBAC7B,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC3B,CAAC,CAAC,KAAK,EAAE,CAAC;iBACX;gBACD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACd;YAED,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,MAAM,CAAC,CAAC,KAAK,EAAG,CAAC;aAClB;SACF;IACH,CAAC;CACF;AAzBD,4CAyBC;AAED,SAAgB,QAAQ,CAAU,MAAyB,EAAE,KAAa;IACxE,OAAO,IAAI,gBAAgB,CAAU,MAAM,EAAE,KAAK,CAAC,CAAC;AACtD,CAAC;AAFD,4BAEC","file":"takelast.js","sourcesContent":["import { IterableX } from './iterablex';\n\nexport class TakeLastIterable<TSource> extends IterableX<TSource> {\n  private _source: Iterable<TSource>;\n  private _count: number;\n\n  constructor(source: Iterable<TSource>, count: number) {\n    super();\n    this._source = source;\n    this._count = count;\n  }\n\n  *[Symbol.iterator]() {\n    if (this._count > 0) {\n      let q = [] as TSource[];\n      for (let item of this._source) {\n        if (q.length >= this._count) {\n          q.shift();\n        }\n        q.push(item);\n      }\n\n      while (q.length > 0) {\n        yield q.shift()!;\n      }\n    }\n  }\n}\n\nexport function takeLast<TSource>(source: Iterable<TSource>, count: number): IterableX<TSource> {\n  return new TakeLastIterable<TSource>(source, count);\n}\n"]}