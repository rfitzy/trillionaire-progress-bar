import { IterableX } from './iterablex';
export declare class ScanIterable<T, R> extends IterableX<R> {
    private _source;
    private _fn;
    private _seed?;
    private _hasSeed;
    constructor(source: Iterable<T>, fn: (acc: R, x: T, index: number) => R, seed: R[]);
    [Symbol.iterator](): IterableIterator<R>;
}
export declare function scan<T, R = T>(source: Iterable<T>, accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R, seed?: never[]): IterableX<R>;
export declare function scan<T, R = T>(source: Iterable<T>, accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R, seed?: R): IterableX<R>;
