import { IterableX } from './iterablex';
export declare class JoinIterable<TOuter, TInner, TKey, TResult> extends IterableX<TResult> {
    private _outer;
    private _inner;
    private _outerSelector;
    private _innerSelector;
    private _resultSelector;
    constructor(outer: Iterable<TOuter>, inner: Iterable<TInner>, outerSelector: (value: TOuter) => TKey, innerSelector: (value: TInner) => TKey, resultSelector: (outer: TOuter, inner: TInner) => TResult);
    [Symbol.iterator](): IterableIterator<TResult>;
}
export declare function innerJoin<TOuter, TInner, TKey, TResult>(outer: Iterable<TOuter>, inner: Iterable<TInner>, outerSelector: (value: TOuter) => TKey, innerSelector: (value: TInner) => TKey, resultSelector: (outer: TOuter, inner: TInner) => TResult): IterableX<TResult>;
