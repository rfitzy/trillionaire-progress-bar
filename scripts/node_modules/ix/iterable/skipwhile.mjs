import { IterableX } from './iterablex';
export class SkipWhileIterable extends IterableX {
    constructor(source, predicate) {
        super();
        this._source = source;
        this._predicate = predicate;
    }
    *[Symbol.iterator]() {
        let yielding = false, i = 0;
        for (let element of this._source) {
            if (!yielding && !this._predicate(element, i++)) {
                yielding = true;
            }
            if (yielding) {
                yield element;
            }
        }
    }
}
export function skipWhile(source, predicate) {
    return new SkipWhileIterable(source, predicate);
}

//# sourceMappingURL=skipwhile.mjs.map
