"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const iterablex_1 = require("./iterablex");
const arrayindexof_1 = require("../internal/arrayindexof");
const comparer_1 = require("../internal/comparer");
function arrayRemove(array, item, comparer) {
    let idx = arrayindexof_1.arrayIndexOf(array, item, comparer);
    if (idx === -1) {
        return false;
    }
    array.splice(idx, 1);
    return true;
}
class IntersectIterable extends iterablex_1.IterableX {
    constructor(first, second, comparer) {
        super();
        this._first = first;
        this._second = second;
        this._comparer = comparer;
    }
    *[Symbol.iterator]() {
        let map = [];
        for (let secondItem of this._second) {
            map.push(secondItem);
        }
        for (let firstItem of this._first) {
            if (arrayRemove(map, firstItem, this._comparer)) {
                yield firstItem;
            }
        }
    }
}
exports.IntersectIterable = IntersectIterable;
function intersect(first, second, comparer = comparer_1.comparer) {
    return new IntersectIterable(first, second, comparer);
}
exports.intersect = intersect;

//# sourceMappingURL=intersect.js.map
