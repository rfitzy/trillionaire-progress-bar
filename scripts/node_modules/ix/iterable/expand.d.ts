import { IterableX } from './iterablex';
export declare class ExpandIterable<TSource> extends IterableX<TSource> {
    private _source;
    private _fn;
    constructor(source: Iterable<TSource>, fn: (value: TSource) => Iterable<TSource>);
    [Symbol.iterator](): IterableIterator<TSource>;
}
/**
 * Expands the sequence by recursively applying a selector function.
 * @param {Iterable<T>} source Source sequence.
 * @param {function(value: T): Iterable<T>} selector Selector function to retrieve the next sequence to expand
 * @return {Iterable<T>} Sequence with results from the recursive expansion of the source sequence.
 */
export declare function expand<TSource>(source: Iterable<TSource>, selector: (value: TSource) => Iterable<TSource>): IterableX<TSource>;
