"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const iterablex_1 = require("./iterablex");
class ExpandIterable extends iterablex_1.IterableX {
    constructor(source, fn) {
        super();
        this._source = source;
        this._fn = fn;
    }
    *[Symbol.iterator]() {
        let q = [this._source];
        while (q.length > 0) {
            let src = q.shift();
            for (let item of src) {
                q.push(this._fn(item));
                yield item;
            }
        }
    }
}
exports.ExpandIterable = ExpandIterable;
/**
 * Expands the sequence by recursively applying a selector function.
 * @param {Iterable<T>} source Source sequence.
 * @param {function(value: T): Iterable<T>} selector Selector function to retrieve the next sequence to expand
 * @return {Iterable<T>} Sequence with results from the recursive expansion of the source sequence.
 */
function expand(source, selector) {
    return new ExpandIterable(source, selector);
}
exports.expand = expand;

//# sourceMappingURL=expand.js.map
