import { IterableX } from './iterablex';
export class SkipIterable extends IterableX {
    constructor(source, count) {
        super();
        this._source = source;
        this._count = count;
    }
    *[Symbol.iterator]() {
        let it = this._source[Symbol.iterator](), count = this._count, next;
        while (count > 0 && !(next = it.next()).done) {
            count--;
        }
        if (count <= 0) {
            while (!(next = it.next()).done) {
                yield next.value;
            }
        }
    }
}
export function skip(source, count) {
    return new SkipIterable(source, count);
}

//# sourceMappingURL=skip.mjs.map
