import { IterableX } from './iterablex';
export class TakeIterable extends IterableX {
    constructor(source, count) {
        super();
        this._source = source;
        this._count = count;
    }
    *[Symbol.iterator]() {
        let i = this._count;
        if (i > 0) {
            for (let item of this._source) {
                yield item;
                if (--i === 0) {
                    break;
                }
            }
        }
    }
}
export function take(source, count) {
    return new TakeIterable(source, count);
}

//# sourceMappingURL=take.mjs.map
