{"version":3,"sources":["iterable/finally.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,aAAa,CAAC;AAExC,MAAM,OAAO,eAAyB,SAAQ,SAAkB;IAI9D,YAAY,MAAyB,EAAE,MAAkB;QACvD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChB,IAAI;YACF,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;SACrB;gBAAS;YACR,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;CACF;AAED;;;;;GAKG;AACH,MAAM,UAAU,QAAQ,CACtB,MAAyB,EACzB,MAAkB;IAElB,OAAO,IAAI,eAAe,CAAU,MAAM,EAAE,MAAM,CAAC,CAAC;AACtD,CAAC","file":"finally.js","sourcesContent":["import { IterableX } from './iterablex';\n\nexport class FinallyIterable<TSource> extends IterableX<TSource> {\n  private _source: Iterable<TSource>;\n  private _action: () => void;\n\n  constructor(source: Iterable<TSource>, action: () => void) {\n    super();\n    this._source = source;\n    this._action = action;\n  }\n\n  *[Symbol.iterator]() {\n    try {\n      yield* this._source;\n    } finally {\n      this._action();\n    }\n  }\n}\n\n/**\n * Creates a sequence whose termination or disposal of an iterator causes a finally action to be executed.\n * @param {Iterator<T>} source Source sequence\n * @param {function(): void)} action Action to run upon termination of the sequence, or when an iterator is disposed.\n * @return {Iterable<T>} Source sequence with guarantees on the invocation of the finally action.\n */\nexport function _finally<TSource>(\n  source: Iterable<TSource>,\n  action: () => void\n): IterableX<TSource> {\n  return new FinallyIterable<TSource>(source, action);\n}\n"]}