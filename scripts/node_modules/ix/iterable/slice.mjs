import { IterableX } from './iterablex';
export class SliceIterable extends IterableX {
    constructor(source, begin, end) {
        super();
        this._source = source;
        this._begin = begin;
        this._end = end;
    }
    *[Symbol.iterator]() {
        let it = this._source[Symbol.iterator](), begin = this._begin, next;
        while (begin > 0 && !(next = it.next()).done) {
            begin--;
        }
        let end = this._end;
        if (end > 0) {
            while (!(next = it.next()).done) {
                yield next.value;
                if (--end === 0) {
                    break;
                }
            }
        }
    }
}
export function slice(source, begin, end = Infinity) {
    return new SliceIterable(source, begin, end);
}

//# sourceMappingURL=slice.mjs.map
