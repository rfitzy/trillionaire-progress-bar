import { IterableX } from './iterablex';
import { create } from './create';
class SharedIterable extends IterableX {
    constructor(it) {
        super();
        this._it = it;
    }
    [Symbol.iterator]() {
        return this._it;
    }
}
export function share(source, fn) {
    return fn
        ? create(() => fn(new SharedIterable(source[Symbol.iterator]()))[Symbol.iterator]())
        : new SharedIterable(source[Symbol.iterator]());
}

//# sourceMappingURL=share.mjs.map
