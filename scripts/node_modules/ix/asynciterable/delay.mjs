import { AsyncIterableX } from './asynciterablex';
import { sleep } from './_sleep';
export class DelayAsyncIterable extends AsyncIterableX {
    constructor(source, dueTime) {
        super();
        this._source = source;
        this._dueTime = dueTime;
    }
    async *[Symbol.asyncIterator]() {
        await sleep(this._dueTime);
        for await (const item of this._source) {
            yield item;
        }
    }
}
export function delay(source, dueTime) {
    return new DelayAsyncIterable(source, dueTime);
}

//# sourceMappingURL=delay.mjs.map
