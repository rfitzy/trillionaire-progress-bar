import { AsyncIterableX } from './asynciterablex';
export class ExpandAsyncIterable extends AsyncIterableX {
    constructor(source, selector) {
        super();
        this._source = source;
        this._selector = selector;
    }
    async *[Symbol.asyncIterator]() {
        let q = [this._source];
        while (q.length > 0) {
            let src = q.shift();
            for await (let item of src) {
                let items = await this._selector(item);
                q.push(items);
                yield item;
            }
        }
    }
}
export function expand(source, selector) {
    return new ExpandAsyncIterable(source, selector);
}

//# sourceMappingURL=expand.mjs.map
