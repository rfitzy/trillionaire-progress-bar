import { AsyncIterableX } from './asynciterablex';
export declare class ScanAsyncIterable<T, R> extends AsyncIterableX<R> {
    private _source;
    private _fn;
    private _seed?;
    private _hasSeed;
    constructor(source: AsyncIterable<T>, fn: (acc: R, x: T, index: number) => R | Promise<R>, seed: R[]);
    [Symbol.asyncIterator](): AsyncIterableIterator<R>;
}
export declare function scan<T, R = T>(source: AsyncIterable<T>, accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R | Promise<R>, seed?: never[]): AsyncIterableX<R>;
export declare function scan<T, R = T>(source: AsyncIterable<T>, accumulator: (previousValue: R, currentValue: T, currentIndex: number) => R | Promise<R>, seed?: R): AsyncIterableX<R>;
