{"version":3,"sources":["asynciterable/create.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,sBAA0B,SAAQ,cAAiB;IAGvD,YAAY,EAAsD;QAChE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAChB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,GAAG,EAAE,EACvB,IAAmC,CAAC;QACtC,OAAO,CAAC,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;YACrC,MAAM,IAAI,CAAC,KAAK,CAAC;SAClB;IACH,CAAC;CACF;AAED,MAAM,UAAU,MAAM,CACpB,EAAsD;IAEtD,OAAO,IAAI,sBAAsB,CAAC,EAAE,CAAC,CAAC;AACxC,CAAC","file":"create.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nclass AnonymousAsyncIterable<T> extends AsyncIterableX<T> {\n  private _fn: () => AsyncIterator<T> | Promise<AsyncIterator<T>>;\n\n  constructor(fn: () => AsyncIterator<T> | Promise<AsyncIterator<T>>) {\n    super();\n    this._fn = fn;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let it = await this._fn(),\n      next: IteratorResult<T> | undefined;\n    while (!(next = await it.next()).done) {\n      yield next.value;\n    }\n  }\n}\n\nexport function create<T>(\n  fn: () => AsyncIterator<T> | Promise<AsyncIterator<T>>\n): AsyncIterableX<T> {\n  return new AnonymousAsyncIterable(fn);\n}\n"]}