{"version":3,"sources":["asynciterable/timeinterval.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAOlD,MAAM,OAAO,yBAAmC,SAAQ,cAAqC;IAG3F,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACnC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;YACvB,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;YACxB,IAAI,GAAG,GAAG,CAAC;YACX,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;SACtC;IACH,CAAC;CACF;AAED,MAAM,UAAU,YAAY,CAC1B,MAA8B;IAE9B,OAAO,IAAI,yBAAyB,CAAU,MAAM,CAAC,CAAC;AACxD,CAAC","file":"timeinterval.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport interface TimeInterval<T> {\n  value: T;\n  elapsed: number;\n}\n\nexport class TimeIntervalAsyncIterable<TSource> extends AsyncIterableX<TimeInterval<TSource>> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let last = Date.now();\n    for await (let item of this._source) {\n      const now = Date.now();\n      const span = now - last;\n      last = now;\n      yield { value: item, elapsed: span };\n    }\n  }\n}\n\nexport function timeInterval<TSource>(\n  source: AsyncIterable<TSource>\n): AsyncIterableX<TimeInterval<TSource>> {\n  return new TimeIntervalAsyncIterable<TSource>(source);\n}\n"]}