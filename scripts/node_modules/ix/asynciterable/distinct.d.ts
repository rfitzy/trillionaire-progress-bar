import { AsyncIterableX } from './asynciterablex';
export declare class DistinctAsyncIterable<TSource, TKey> extends AsyncIterableX<TSource> {
    private _source;
    private _keySelector;
    private _comparer;
    constructor(source: AsyncIterable<TSource>, keySelector: (value: TSource) => TKey | Promise<TKey>, comparer: (x: TKey, y: TKey) => boolean | Promise<boolean>);
    [Symbol.asyncIterator](): AsyncIterableIterator<TSource>;
}
export declare function distinct<TSource, TKey>(source: AsyncIterable<TSource>, keySelector?: (value: TSource) => TKey | Promise<TKey>, comparer?: (x: TKey, y: TKey) => boolean | Promise<boolean>): AsyncIterableX<TSource>;
