{"version":3,"sources":["asynciterable/slice.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAElD,MAAa,kBAA4B,SAAQ,+BAAuB;IAKtE,YAAY,MAA8B,EAAE,KAAa,EAAE,GAAW;QACpE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAClB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,EAC3C,KAAK,GAAG,IAAI,CAAC,MAAM,EACnB,IAAI,CAAC;QACP,OAAO,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;YAClD,KAAK,EAAE,CAAC;SACT;QAED,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;QACpB,IAAI,GAAG,GAAG,CAAC,EAAE;YACX,OAAO,CAAC,CAAC,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE;gBACrC,MAAM,IAAI,CAAC,KAAK,CAAC;gBACjB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE;oBACf,MAAM;iBACP;aACF;SACF;IACH,CAAC;CACF;AA9BD,gDA8BC;AAED,SAAgB,KAAK,CACnB,MAA8B,EAC9B,KAAa,EACb,MAAc,QAAQ;IAEtB,OAAO,IAAI,kBAAkB,CAAU,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;AAC7D,CAAC;AAND,sBAMC","file":"slice.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class SliceAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n  private _begin: number;\n  private _end: number;\n\n  constructor(source: AsyncIterable<TSource>, begin: number, end: number) {\n    super();\n    this._source = source;\n    this._begin = begin;\n    this._end = end;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let it = this._source[Symbol.asyncIterator](),\n      begin = this._begin,\n      next;\n    while (begin > 0 && !(next = await it.next()).done) {\n      begin--;\n    }\n\n    let end = this._end;\n    if (end > 0) {\n      while (!(next = await it.next()).done) {\n        yield next.value;\n        if (--end === 0) {\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport function slice<TSource>(\n  source: AsyncIterable<TSource>,\n  begin: number,\n  end: number = Infinity\n): AsyncIterableX<TSource> {\n  return new SliceAsyncIterable<TSource>(source, begin, end);\n}\n"]}