import { AsyncSink } from '../asyncsink';
import { memoize } from './memoize';
export function asyncify(func) {
    return function (...args) {
        const sink = new AsyncSink();
        const handler = function (...innerArgs) {
            sink.write(innerArgs.length === 1 ? innerArgs[0] : innerArgs);
            sink.end();
        };
        try {
            func(...args.concat(handler));
        }
        catch (e) {
            sink.error(e);
            sink.end();
        }
        return memoize((async function* () {
            for (let next; !(next = await sink.next()).done;) {
                yield next.value;
            }
        })());
    };
}

//# sourceMappingURL=asyncify.mjs.map
