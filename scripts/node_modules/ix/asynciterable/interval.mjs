import { AsyncIterableX } from './asynciterablex';
import { sleep } from './_sleep';
class IntervalAsyncIterable extends AsyncIterableX {
    constructor(dueTime) {
        super();
        this._dueTime = dueTime;
    }
    async *[Symbol.asyncIterator]() {
        let i = 0;
        while (1) {
            await sleep(this._dueTime);
            yield i++;
        }
    }
}
export function interval(dueTime) {
    return new IntervalAsyncIterable(dueTime);
}

//# sourceMappingURL=interval.mjs.map
