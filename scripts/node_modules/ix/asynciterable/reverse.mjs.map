{"version":3,"sources":["asynciterable/reverse.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,OAAO,oBAA8B,SAAQ,cAAuB;IAGxE,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,OAAO,GAAG,EAAe,CAAC;QAC9B,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACnC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACvB;QACD,KAAK,CAAC,CAAC,OAAO,CAAC;IACjB,CAAC;CACF;AAED,MAAM,UAAU,OAAO,CAAU,MAA8B;IAC7D,OAAO,IAAI,oBAAoB,CAAU,MAAM,CAAC,CAAC;AACnD,CAAC","file":"reverse.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class ReverseAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let results = [] as TSource[];\n    for await (let item of this._source) {\n      results.unshift(item);\n    }\n    yield* results;\n  }\n}\n\nexport function reverse<TSource>(source: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n  return new ReverseAsyncIterable<TSource>(source);\n}\n"]}