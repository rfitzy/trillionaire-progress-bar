import { AsyncIterableX } from './asynciterablex';
import { bindCallback } from '../internal/bindcallback';
export class MapAsyncIterable extends AsyncIterableX {
    constructor(source, selector) {
        super();
        this._source = source;
        this._selector = selector;
    }
    async *[Symbol.asyncIterator]() {
        let i = 0;
        for await (let item of this._source) {
            let result = await this._selector(item, i++);
            yield result;
        }
    }
}
export function map(source, selector, thisArg) {
    return new MapAsyncIterable(source, bindCallback(selector, thisArg, 2));
}

//# sourceMappingURL=map.mjs.map
