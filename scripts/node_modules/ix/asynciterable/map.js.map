{"version":3,"sources":["asynciterable/map.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAClD,2DAAwD;AAExD,MAAa,gBAAmC,SAAQ,+BAAuB;IAI7E,YACE,MAA8B,EAC9B,QAAuE;QAEvE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,EAAE,IAAI,IAAI,IAA4B,IAAI,CAAC,OAAO,EAAE;YAC3D,IAAI,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;YAC7C,MAAM,MAAM,CAAC;SACd;IACH,CAAC;CACF;AApBD,4CAoBC;AAED,SAAgB,GAAG,CACjB,MAA8B,EAC9B,QAAuE,EACvE,OAAa;IAEb,OAAO,IAAI,gBAAgB,CAAmB,MAAM,EAAE,2BAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5F,CAAC;AAND,kBAMC","file":"map.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\nimport { bindCallback } from '../internal/bindcallback';\n\nexport class MapAsyncIterable<TSource, TResult> extends AsyncIterableX<TResult> {\n  private _source: AsyncIterable<TSource>;\n  private _selector: (value: TSource, index: number) => Promise<TResult> | TResult;\n\n  constructor(\n    source: AsyncIterable<TSource>,\n    selector: (value: TSource, index: number) => Promise<TResult> | TResult\n  ) {\n    super();\n    this._source = source;\n    this._selector = selector;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let i = 0;\n    for await (let item of <AsyncIterable<TSource>>this._source) {\n      let result = await this._selector(item, i++);\n      yield result;\n    }\n  }\n}\n\nexport function map<TSource, TResult>(\n  source: AsyncIterable<TSource>,\n  selector: (value: TSource, index: number) => Promise<TResult> | TResult,\n  thisArg?: any\n): AsyncIterableX<TResult> {\n  return new MapAsyncIterable<TSource, TResult>(source, bindCallback(selector, thisArg, 2));\n}\n"]}