{"version":3,"sources":["asynciterable/onerrorresumenext.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAElD,MAAa,8BAAwC,SAAQ,+BAAuB;IAGlF,YAAY,MAAwC;QAClD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YAC7B,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;YACtC,OAAO,CAAC,EAAE;gBACR,IAAI,IAAI,CAAC;gBACT,IAAI;oBACF,IAAI,GAAG,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC;iBACxB;gBAAC,OAAO,CAAC,EAAE;oBACV,MAAM;iBACP;gBAED,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,MAAM;iBACP;gBACD,MAAM,IAAI,CAAC,KAAK,CAAC;aAClB;SACF;IACH,CAAC;CACF;AA1BD,wEA0BC;AAED,SAAgB,iBAAiB,CAC/B,MAAwB,EACxB,GAAG,IAAwB;IAE3B,OAAO,IAAI,8BAA8B,CAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AAClE,CAAC;AALD,8CAKC;AAED,SAAgB,uBAAuB,CAAI,GAAG,MAA0B;IACtE,OAAO,IAAI,8BAA8B,CAAI,MAAM,CAAC,CAAC;AACvD,CAAC;AAFD,0DAEC","file":"onerrorresumenext.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class OnErrorResumeNextAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: Iterable<AsyncIterable<TSource>>;\n\n  constructor(source: Iterable<AsyncIterable<TSource>>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for (let item of this._source) {\n      let it = item[Symbol.asyncIterator]();\n      while (1) {\n        let next;\n        try {\n          next = await it.next();\n        } catch (e) {\n          break;\n        }\n\n        if (next.done) {\n          break;\n        }\n        yield next.value;\n      }\n    }\n  }\n}\n\nexport function onErrorResumeNext<T>(\n  source: AsyncIterable<T>,\n  ...args: AsyncIterable<T>[]\n): AsyncIterableX<T> {\n  return new OnErrorResumeNextAsyncIterable<T>([source, ...args]);\n}\n\nexport function onErrorResumeNextStatic<T>(...source: AsyncIterable<T>[]): AsyncIterableX<T> {\n  return new OnErrorResumeNextAsyncIterable<T>(source);\n}\n"]}