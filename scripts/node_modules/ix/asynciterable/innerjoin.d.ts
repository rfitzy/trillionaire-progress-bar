import { AsyncIterableX } from './asynciterablex';
export declare class JoinAsyncIterable<TOuter, TInner, TKey, TResult> extends AsyncIterableX<TResult> {
    private _outer;
    private _inner;
    private _outerSelector;
    private _innerSelector;
    private _resultSelector;
    constructor(outer: AsyncIterable<TOuter>, inner: AsyncIterable<TInner>, outerSelector: (value: TOuter) => TKey | Promise<TKey>, innerSelector: (value: TInner) => TKey | Promise<TKey>, resultSelector: (outer: TOuter, inner: TInner) => TResult | Promise<TResult>);
    [Symbol.asyncIterator](): AsyncIterableIterator<TResult>;
}
export declare function innerJoin<TOuter, TInner, TKey, TResult>(outer: AsyncIterable<TOuter>, inner: AsyncIterable<TInner>, outerSelector: (value: TOuter) => TKey | Promise<TKey>, innerSelector: (value: TInner) => TKey | Promise<TKey>, resultSelector: (outer: TOuter, inner: TInner) => TResult | Promise<TResult>): AsyncIterableX<TResult>;
