{"version":3,"sources":["asynciterable/findindex.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAExD,MAAM,CAAC,KAAK,UAAU,SAAS,CAC7B,MAAwB,EACxB,SAAkE,EAClE,OAAa;IAEb,MAAM,EAAE,GAAG,YAAY,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IAC/C,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,IAAI,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;YACvB,OAAO,CAAC,CAAC;SACV;KACF;IACD,OAAO,CAAC,CAAC,CAAC;AACZ,CAAC","file":"findindex.js","sourcesContent":["import { bindCallback } from '../internal/bindcallback';\n\nexport async function findIndex<T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>,\n  thisArg?: any\n): Promise<number> {\n  const fn = bindCallback(predicate, thisArg, 2);\n  let i = 0;\n\n  for await (let item of source) {\n    if (await fn(item, i++)) {\n      return i;\n    }\n  }\n  return -1;\n}\n"]}