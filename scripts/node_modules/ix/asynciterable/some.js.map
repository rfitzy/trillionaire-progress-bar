{"version":3,"sources":["asynciterable/some.ts"],"names":[],"mappings":";;AAQO,KAAK,UAAU,IAAI,CACxB,MAAwB,EACxB,SAAkE;IAElE,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,IAAI,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAXD,oBAWC","file":"some.js","sourcesContent":["export async function some<T, S extends T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => value is S\n): Promise<boolean>;\nexport async function some<T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<boolean>;\nexport async function some<T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<boolean> {\n  let i = 0;\n  for await (let item of source) {\n    if (await predicate(item, i++)) {\n      return true;\n    }\n  }\n  return false;\n}\n"]}