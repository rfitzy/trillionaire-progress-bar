"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const asynciterablex_1 = require("./asynciterablex");
const toarray_1 = require("./toarray");
class ScanRightAsyncIterable extends asynciterablex_1.AsyncIterableX {
    constructor(source, fn, seed) {
        super();
        this._source = source;
        this._fn = fn;
        this._hasSeed = seed.length === 1;
        this._seed = seed[0];
    }
    async *[Symbol.asyncIterator]() {
        let hasValue = false, acc = this._seed;
        const source = await toarray_1.toArray(this._source);
        for (let offset = source.length - 1; offset >= 0; offset--) {
            const item = source[offset];
            if (hasValue || (hasValue = this._hasSeed)) {
                acc = await this._fn(acc, item, offset);
                yield acc;
            }
            else {
                acc = item;
                hasValue = true;
            }
        }
    }
}
exports.ScanRightAsyncIterable = ScanRightAsyncIterable;
function scanRight(source, accumulator, ...seed) {
    return new ScanRightAsyncIterable(source, accumulator, seed);
}
exports.scanRight = scanRight;

//# sourceMappingURL=scanright.js.map
