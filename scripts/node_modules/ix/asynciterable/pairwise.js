"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const asynciterablex_1 = require("./asynciterablex");
class PairwiseAsyncIterable extends asynciterablex_1.AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    async *[Symbol.asyncIterator]() {
        let value, hasValue = false;
        for await (const item of this._source) {
            if (!hasValue) {
                hasValue = true;
            }
            else {
                yield [value, item];
            }
            value = item;
        }
    }
}
exports.PairwiseAsyncIterable = PairwiseAsyncIterable;
/**
 * Returns a new sequence that triggers on the second and subsequent triggerings of the input sequence.
 * @param {AsyncIterable<T>} source Source sequence.
 * @return {AsyncIterable<T[]>} A sequence that triggers on successive pairs of iterations from the input sequence.
 */
function pairwise(source) {
    return new PairwiseAsyncIterable(source);
}
exports.pairwise = pairwise;

//# sourceMappingURL=pairwise.js.map
