{"version":3,"sources":["asynciterable/includes.ts"],"names":[],"mappings":";;AAAA,mDAAgD;AAEzC,KAAK,UAAU,QAAQ,CAC5B,MAAwB,EACxB,aAAgB,EAChB,YAAoB,CAAC;IAErB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;QACvB,SAAS,GAAG,CAAC,CAAC;KACf;IACD,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,IAAI,CAAC,EAAE,GAAG,SAAS,IAAI,mBAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,EAAE;YACpD,OAAO,IAAI,CAAC;SACb;KACF;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAfD,4BAeC","file":"includes.js","sourcesContent":["import { comparer } from '../internal/comparer';\n\nexport async function includes<T>(\n  source: AsyncIterable<T>,\n  searchElement: T,\n  fromIndex: number = 0\n): Promise<boolean> {\n  let i = 0;\n  if (Math.abs(fromIndex)) {\n    fromIndex = 0;\n  }\n  for await (let item of source) {\n    if (i++ > fromIndex && comparer(item, searchElement)) {\n      return true;\n    }\n  }\n  return false;\n}\n"]}