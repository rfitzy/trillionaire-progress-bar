{"version":3,"sources":["asynciterable/takelast.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,OAAO,qBAA+B,SAAQ,cAAuB;IAIzE,YAAY,MAA8B,EAAE,KAAa;QACvD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,GAAG,EAAe,CAAC;YACxB,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACnC,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAAE;oBAC3B,CAAC,CAAC,KAAK,EAAE,CAAC;iBACX;gBACD,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACd;YAED,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBACnB,MAAM,CAAC,CAAC,KAAK,EAAG,CAAC;aAClB;SACF;IACH,CAAC;CACF;AAED,MAAM,UAAU,QAAQ,CACtB,MAA8B,EAC9B,KAAa;IAEb,OAAO,IAAI,qBAAqB,CAAU,MAAM,EAAE,KAAK,CAAC,CAAC;AAC3D,CAAC","file":"takelast.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class TakeLastAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n  private _count: number;\n\n  constructor(source: AsyncIterable<TSource>, count: number) {\n    super();\n    this._source = source;\n    this._count = count;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    if (this._count > 0) {\n      let q = [] as TSource[];\n      for await (let item of this._source) {\n        if (q.length >= this._count) {\n          q.shift();\n        }\n        q.push(item);\n      }\n\n      while (q.length > 0) {\n        yield q.shift()!;\n      }\n    }\n  }\n}\n\nexport function takeLast<TSource>(\n  source: AsyncIterable<TSource>,\n  count: number\n): AsyncIterableX<TSource> {\n  return new TakeLastAsyncIterable<TSource>(source, count);\n}\n"]}