import { AsyncIterableX } from './asynciterablex';
export class DefaultIfEmptyAsyncIterable extends AsyncIterableX {
    constructor(source, defaultValue) {
        super();
        this._source = source;
        this._defaultValue = defaultValue;
    }
    async *[Symbol.asyncIterator]() {
        let state = 1;
        for await (let item of this._source) {
            state = 2;
            yield item;
        }
        if (state === 1) {
            yield this._defaultValue;
        }
    }
}
export function defaultIfEmpty(source, defaultValue) {
    return new DefaultIfEmptyAsyncIterable(source, defaultValue);
}

//# sourceMappingURL=defaultifempty.mjs.map
