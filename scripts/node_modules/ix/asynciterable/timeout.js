"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const asynciterablex_1 = require("./asynciterablex");
const _sleep_1 = require("./_sleep");
class TimeoutError extends Error {
    constructor() {
        super();
        Object.setPrototypeOf(this, TimeoutError.prototype);
        this.message = 'Timeout has occurred';
    }
}
exports.TimeoutError = TimeoutError;
const VALUE_TYPE = 'value';
const ERROR_TYPE = 'error';
class TimeoutAsyncIterable extends asynciterablex_1.AsyncIterableX {
    constructor(source, dueTime) {
        super();
        this._source = source;
        this._dueTime = dueTime;
    }
    async *[Symbol.asyncIterator]() {
        const it = this._source[Symbol.asyncIterator]();
        while (1) {
            const { type, value } = await Promise.race([
                it.next().then(value => {
                    return { type: VALUE_TYPE, value };
                }),
                _sleep_1.sleep(this._dueTime).then(() => {
                    return { type: ERROR_TYPE };
                })
            ]);
            if (type === ERROR_TYPE) {
                throw new TimeoutError();
            }
            if (!value || value.done) {
                break;
            }
            yield value.value;
        }
    }
}
exports.TimeoutAsyncIterable = TimeoutAsyncIterable;
function timeout(source, dueTime) {
    return new TimeoutAsyncIterable(source, dueTime);
}
exports.timeout = timeout;

//# sourceMappingURL=timeout.js.map
