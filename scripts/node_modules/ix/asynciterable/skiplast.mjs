import { AsyncIterableX } from './asynciterablex';
export class SkipLastAsyncIterable extends AsyncIterableX {
    constructor(source, count) {
        super();
        this._source = source;
        this._count = count;
    }
    async *[Symbol.asyncIterator]() {
        let q = [];
        for await (let item of this._source) {
            q.push(item);
            if (q.length > this._count) {
                yield q.shift();
            }
        }
    }
}
export function skipLast(source, count) {
    return new SkipLastAsyncIterable(source, count);
}

//# sourceMappingURL=skiplast.mjs.map
