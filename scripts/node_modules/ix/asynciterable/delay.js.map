{"version":3,"sources":["asynciterable/delay.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAClD,qCAAiC;AAEjC,MAAa,kBAA4B,SAAQ,+BAAuB;IAItE,YAAY,MAA8B,EAAE,OAAe;QACzD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,MAAM,cAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3B,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACrC,MAAM,IAAI,CAAC;SACZ;IACH,CAAC;CACF;AAhBD,gDAgBC;AAED,SAAgB,KAAK,CACnB,MAA8B,EAC9B,OAAe;IAEf,OAAO,IAAI,kBAAkB,CAAU,MAAM,EAAE,OAAO,CAAC,CAAC;AAC1D,CAAC;AALD,sBAKC","file":"delay.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\nimport { sleep } from './_sleep';\n\nexport class DelayAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n  private _dueTime: number;\n\n  constructor(source: AsyncIterable<TSource>, dueTime: number) {\n    super();\n    this._source = source;\n    this._dueTime = dueTime;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    await sleep(this._dueTime);\n    for await (const item of this._source) {\n      yield item;\n    }\n  }\n}\n\nexport function delay<TSource>(\n  source: AsyncIterable<TSource>,\n  dueTime: number\n): AsyncIterableX<TSource> {\n  return new DelayAsyncIterable<TSource>(source, dueTime);\n}\n"]}