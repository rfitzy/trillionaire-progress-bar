{"version":3,"sources":["asynciterable/every.ts"],"names":[],"mappings":";;AAQO,KAAK,UAAU,KAAK,CACzB,MAAwB,EACxB,SAAkE;IAElE,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,IAAI,CAAC,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;YAC/B,OAAO,KAAK,CAAC;SACd;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AAXD,sBAWC","file":"every.js","sourcesContent":["export async function every<T, S extends T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => value is S\n): Promise<boolean>;\nexport async function every<T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<boolean>;\nexport async function every<T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<boolean> {\n  let i = 0;\n  for await (let item of source) {\n    if (!await predicate(item, i++)) {\n      return false;\n    }\n  }\n  return true;\n}\n"]}