{"version":3,"sources":["asynciterable/defaultifempty.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAElD,MAAa,2BAAqC,SAAQ,+BAAuB;IAI/E,YAAY,MAA8B,EAAE,YAAqB;QAC/D,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACnC,KAAK,GAAG,CAAC,CAAC;YACV,MAAM,IAAI,CAAC;SACZ;QACD,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,MAAM,IAAI,CAAC,aAAa,CAAC;SAC1B;IACH,CAAC;CACF;AApBD,kEAoBC;AAED,SAAgB,cAAc,CAAI,MAAwB,EAAE,YAAe;IACzE,OAAO,IAAI,2BAA2B,CAAI,MAAM,EAAE,YAAY,CAAC,CAAC;AAClE,CAAC;AAFD,wCAEC","file":"defaultifempty.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class DefaultIfEmptyAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n  private _defaultValue: TSource;\n\n  constructor(source: AsyncIterable<TSource>, defaultValue: TSource) {\n    super();\n    this._source = source;\n    this._defaultValue = defaultValue;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let state = 1;\n    for await (let item of this._source) {\n      state = 2;\n      yield item;\n    }\n    if (state === 1) {\n      yield this._defaultValue;\n    }\n  }\n}\n\nexport function defaultIfEmpty<T>(source: AsyncIterable<T>, defaultValue: T): AsyncIterableX<T> {\n  return new DefaultIfEmptyAsyncIterable<T>(source, defaultValue);\n}\n"]}