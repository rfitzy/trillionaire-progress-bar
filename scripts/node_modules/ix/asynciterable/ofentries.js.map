{"version":3,"sources":["asynciterable/ofentries.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAElD,SAAS,SAAS,CAAkB,CAAS,EAAE,CAAU;IACvD,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAChB,CAAC;AAED,MAAM,sBAAgC,SAAQ,+BAAiC;IAG7E,YAAY,MAAkC;QAC5C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,CAAC,MAAM,CAAC,aAAa,CAAC;QACpB,OAAO,+BAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAC7F,MAAM,CAAC,aAAa,CACrB,EAAE,CAAC;IACN,CAAC;CACF;AAED,SAAgB,SAAS,CAAU,MAElC;IACC,OAAO,IAAI,sBAAsB,CAAU,MAAM,CAAC,CAAC;AACrD,CAAC;AAJD,8BAIC","file":"ofentries.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nfunction makeTuple<TFirst, TSecond>(x: TFirst, y: TSecond): [TFirst, TSecond] {\n  return [x, y];\n}\n\nclass OfEntriesAsyncIterable<TSource> extends AsyncIterableX<[string, TSource]> {\n  private _source: { [key: string]: TSource };\n\n  constructor(source: { [key: string]: TSource }) {\n    super();\n    this._source = source;\n  }\n\n  [Symbol.asyncIterator]() {\n    return AsyncIterableX.from(Object.keys(this._source), key => makeTuple(key, this._source[key]))[\n      Symbol.asyncIterator\n    ]();\n  }\n}\n\nexport function ofEntries<TSource>(source: {\n  [key: string]: TSource;\n}): AsyncIterableX<[string, TSource]> {\n  return new OfEntriesAsyncIterable<TSource>(source);\n}\n"]}