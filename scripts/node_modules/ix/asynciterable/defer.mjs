import { AsyncIterableX } from './asynciterablex';
class DeferAsyncIterable extends AsyncIterableX {
    constructor(fn) {
        super();
        this._fn = fn;
    }
    async *[Symbol.asyncIterator]() {
        let items = await this._fn();
        for await (let item of items) {
            yield item;
        }
    }
}
export function defer(factory) {
    return new DeferAsyncIterable(factory);
}

//# sourceMappingURL=defer.mjs.map
