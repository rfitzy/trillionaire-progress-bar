{"version":3,"sources":["asynciterable/ofvalues.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,qBAA+B,SAAQ,cAAuB;IAGlE,YAAY,MAAkC;QAC5C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,CAAC,MAAM,CAAC,aAAa,CAAC;QACpB,OAAO,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAC7E,MAAM,CAAC,aAAa,CACrB,EAAE,CAAC;IACN,CAAC;CACF;AAED,MAAM,UAAU,QAAQ,CAAU,MAAkC;IAClE,OAAO,IAAI,qBAAqB,CAAU,MAAM,CAAC,CAAC;AACpD,CAAC","file":"ofvalues.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nclass OfValuesAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: { [key: string]: TSource };\n\n  constructor(source: { [key: string]: TSource }) {\n    super();\n    this._source = source;\n  }\n\n  [Symbol.asyncIterator]() {\n    return AsyncIterableX.from(Object.keys(this._source), key => this._source[key])[\n      Symbol.asyncIterator\n    ]();\n  }\n}\n\nexport function ofValues<TSource>(source: { [key: string]: TSource }): AsyncIterableX<TSource> {\n  return new OfValuesAsyncIterable<TSource>(source);\n}\n"]}