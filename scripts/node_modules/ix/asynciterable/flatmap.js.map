{"version":3,"sources":["asynciterable/flatmap.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAClD,2DAAwD;AAExD,MAAa,oBAAuC,SAAQ,+BAAuB;IAIjF,YACE,MAA8B,EAC9B,QAAsF;QAEtF,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,KAAK,EAAE,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE;YACpC,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,KAAK,EAAE,IAAI,KAAK,IAAI,MAAM,EAAE;gBAC9B,MAAM,KAAK,CAAC;aACb;SACF;IACH,CAAC;CACF;AArBD,oDAqBC;AAED,SAAgB,OAAO,CACrB,MAA8B,EAC9B,QAAsF,EACtF,OAAa;IAEb,OAAO,IAAI,oBAAoB,CAAmB,MAAM,EAAE,2BAAY,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC;AAND,0BAMC","file":"flatmap.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\nimport { bindCallback } from '../internal/bindcallback';\n\nexport class FlatMapAsyncIterable<TSource, TResult> extends AsyncIterableX<TResult> {\n  private _source: AsyncIterable<TSource>;\n  private _selector: (value: TSource) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>;\n\n  constructor(\n    source: AsyncIterable<TSource>,\n    selector: (value: TSource) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>\n  ) {\n    super();\n    this._source = source;\n    this._selector = selector;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (let outer of this._source) {\n      const inners = await this._selector(outer);\n      for await (let inner of inners) {\n        yield inner;\n      }\n    }\n  }\n}\n\nexport function flatMap<TSource, TResult>(\n  source: AsyncIterable<TSource>,\n  selector: (value: TSource) => AsyncIterable<TResult> | Promise<AsyncIterable<TResult>>,\n  thisArg?: any\n): AsyncIterableX<TResult> {\n  return new FlatMapAsyncIterable<TSource, TResult>(source, bindCallback(selector, thisArg, 1));\n}\n"]}