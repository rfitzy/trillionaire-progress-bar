{"version":3,"sources":["asynciterable/pipe/intersect.ts"],"names":[],"mappings":";;AAEA,4CAAsD;AACtD,sDAAwD;AAExD,SAAgB,SAAS,CACvB,MAA8B,EAC9B,WAAmE,wBAAa;IAEhF,OAAO,SAAS,yBAAyB,CACvC,KAA6B;QAE7B,OAAO,IAAI,kCAAsB,CAAU,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtE,CAAC,CAAC;AACJ,CAAC;AATD,8BASC","file":"intersect.js","sourcesContent":["import { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { IntersectAsyncIterable } from '../intersect';\nimport { comparerAsync } from '../../internal/comparer';\n\nexport function intersect<TSource>(\n  second: AsyncIterable<TSource>,\n  comparer: (x: TSource, y: TSource) => boolean | Promise<boolean> = comparerAsync\n): MonoTypeOperatorAsyncFunction<TSource> {\n  return function intersectOperatorFunction(\n    first: AsyncIterable<TSource>\n  ): AsyncIterableX<TSource> {\n    return new IntersectAsyncIterable<TSource>(first, second, comparer);\n  };\n}\n"]}