{"version":3,"sources":["asynciterable/pipe/groupjoin.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,sBAAsB,EAAE,MAAM,cAAc,CAAC;AAEtD,MAAM,UAAU,SAAS,CACvB,KAA4B,EAC5B,aAAsD,EACtD,aAAsD,EACtD,cAA2F;IAE3F,OAAO,SAAS,yBAAyB,CAAC,KAA4B;QACpE,OAAO,IAAI,sBAAsB,CAC/B,KAAK,EACL,KAAK,EACL,aAAa,EACb,aAAa,EACb,cAAc,CACf,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","file":"groupjoin.js","sourcesContent":["import { OperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { GroupJoinAsyncIterable } from '../groupjoin';\n\nexport function groupJoin<TOuter, TInner, TKey, TResult>(\n  inner: AsyncIterable<TInner>,\n  outerSelector: (value: TOuter) => TKey | Promise<TKey>,\n  innerSelector: (value: TInner) => TKey | Promise<TKey>,\n  resultSelector: (outer: TOuter, inner: AsyncIterable<TInner>) => TResult | Promise<TResult>\n): OperatorAsyncFunction<TOuter, TResult> {\n  return function groupJoinOperatorFunction(outer: AsyncIterable<TOuter>): AsyncIterableX<TResult> {\n    return new GroupJoinAsyncIterable<TOuter, TInner, TKey, TResult>(\n      outer,\n      inner,\n      outerSelector,\n      innerSelector,\n      resultSelector\n    );\n  };\n}\n"]}