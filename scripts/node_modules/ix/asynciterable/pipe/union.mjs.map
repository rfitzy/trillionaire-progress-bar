{"version":3,"sources":["asynciterable/pipe/union.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,kBAAkB,EAAE,MAAM,UAAU,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AAExD,MAAM,UAAU,KAAK,CACnB,KAA6B,EAC7B,WAAmE,aAAa;IAEhF,OAAO,SAAS,qBAAqB,CAAC,IAA4B;QAChE,OAAO,IAAI,kBAAkB,CAAU,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;IAChE,CAAC,CAAC;AACJ,CAAC","file":"union.js","sourcesContent":["import { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { UnionAsyncIterable } from '../union';\nimport { comparerAsync } from '../../internal/comparer';\n\nexport function union<TSource>(\n  right: AsyncIterable<TSource>,\n  comparer: (x: TSource, y: TSource) => boolean | Promise<boolean> = comparerAsync\n): MonoTypeOperatorAsyncFunction<TSource> {\n  return function unionOperatorFunction(left: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n    return new UnionAsyncIterable<TSource>(left, right, comparer);\n  };\n}\n"]}