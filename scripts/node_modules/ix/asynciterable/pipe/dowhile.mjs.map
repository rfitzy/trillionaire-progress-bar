{"version":3,"sources":["asynciterable/pipe/dowhile.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AACzC,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAElC,MAAM,UAAU,OAAO,CACrB,SAA2C;IAE3C,OAAO,SAAS,uBAAuB,CAAC,MAA8B;QACpE,OAAO,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;IACzD,CAAC,CAAC;AACJ,CAAC","file":"dowhile.js","sourcesContent":["import { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { concatStatic } from '../concat';\nimport { _while } from '../while';\n\nexport function doWhile<TSource>(\n  condition: () => boolean | Promise<boolean>\n): MonoTypeOperatorAsyncFunction<TSource> {\n  return function doWhileOperatorFunction(source: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n    return concatStatic(source, _while(condition, source));\n  };\n}\n"]}