{"version":3,"sources":["asynciterable/pipe/minby.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAE/D,MAAM,UAAU,KAAK,CACnB,WAAiD,EACjD,WAA2D,mBAAmB;IAE9E,OAAO,SAAS,qBAAqB,CAAC,MAA8B;QAClE,OAAO,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;IACjG,CAAC,CAAC;AACJ,CAAC","file":"minby.js","sourcesContent":["import { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { extremaBy, defaultCompareAsync } from '../_extremaby';\n\nexport function minBy<TSource, TKey>(\n  keySelector: (x: TSource) => TKey | Promise<TKey>,\n  comparer: (x: TKey, y: TKey) => number | Promise<number> = defaultCompareAsync\n): MonoTypeOperatorAsyncFunction<TSource> {\n  return function minByOperatorFunction(source: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n    return extremaBy(source, keySelector, async (key, minValue) => -await comparer(key, minValue));\n  };\n}\n"]}