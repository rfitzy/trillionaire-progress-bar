{"version":3,"sources":["asynciterable/pipe/catchwith.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,sBAAsB,EAAE,MAAM,cAAc,CAAC;AAEtD,MAAM,UAAU,SAAS,CACvB,OAAiF;IAEjF,OAAO,SAAS,yBAAyB,CACvC,MAA8B;QAE9B,OAAO,IAAI,sBAAsB,CAAU,MAAM,EAAE,OAAO,CAAC,CAAC;IAC9D,CAAC,CAAC;AACJ,CAAC","file":"catchwith.js","sourcesContent":["import { MonoTypeOperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { CatchWithAsyncIterable } from '../catchwith';\n\nexport function catchWith<TSource>(\n  handler: (error: any) => AsyncIterable<TSource> | Promise<AsyncIterable<TSource>>\n): MonoTypeOperatorAsyncFunction<TSource> {\n  return function catchWithOperatorFunction(\n    source: AsyncIterable<TSource>\n  ): AsyncIterableX<TSource> {\n    return new CatchWithAsyncIterable<TSource>(source, handler);\n  };\n}\n"]}