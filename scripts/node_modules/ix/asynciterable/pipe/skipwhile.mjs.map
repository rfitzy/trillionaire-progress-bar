{"version":3,"sources":["asynciterable/pipe/skipwhile.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,sBAAsB,EAAE,MAAM,cAAc,CAAC;AAQtD,MAAM,UAAU,SAAS,CACvB,SAAkE;IAElE,OAAO,SAAS,yBAAyB,CAAC,MAAwB;QAChE,OAAO,IAAI,sBAAsB,CAAI,MAAM,EAAE,SAAS,CAAC,CAAC;IAC1D,CAAC,CAAC;AACJ,CAAC","file":"skipwhile.js","sourcesContent":["import { OperatorAsyncFunction } from '../../interfaces';\nimport { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { SkipWhileAsyncIterable } from '../skipwhile';\n\nexport function skipWhile<T, S extends T>(\n  predicate: (value: T, index: number) => value is S\n): OperatorAsyncFunction<T, S>;\nexport function skipWhile<T>(\n  predicate: (value: T, index: number) => boolean | Promise<boolean>\n): OperatorAsyncFunction<T, T>;\nexport function skipWhile<T>(\n  predicate: (value: T, index: number) => boolean | Promise<boolean>\n): OperatorAsyncFunction<T, T> {\n  return function skipWhileOperatorFunction(source: AsyncIterable<T>): AsyncIterableX<T> {\n    return new SkipWhileAsyncIterable<T>(source, predicate);\n  };\n}\n"]}