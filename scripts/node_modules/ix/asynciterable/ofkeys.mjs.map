{"version":3,"sources":["asynciterable/ofkeys.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAElD,MAAM,mBAA6B,SAAQ,cAAsB;IAG/D,YAAY,MAAkC;QAC5C,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,CAAC,MAAM,CAAC,aAAa,CAAC;QACpB,OAAO,cAAc,CAAC,IAAI,CAAiB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC;IAChG,CAAC;CACF;AAED,MAAM,UAAU,MAAM,CAAU,MAAkC;IAChE,OAAO,IAAI,mBAAmB,CAAU,MAAM,CAAC,CAAC;AAClD,CAAC","file":"ofkeys.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nclass OfKeysAsyncIterable<TSource> extends AsyncIterableX<string> {\n  private _source: { [key: string]: TSource };\n\n  constructor(source: { [key: string]: TSource }) {\n    super();\n    this._source = source;\n  }\n\n  [Symbol.asyncIterator]() {\n    return AsyncIterableX.from<string, string>(Object.keys(this._source))[Symbol.asyncIterator]();\n  }\n}\n\nexport function ofKeys<TSource>(source: { [key: string]: TSource }): AsyncIterableX<string> {\n  return new OfKeysAsyncIterable<TSource>(source);\n}\n"]}