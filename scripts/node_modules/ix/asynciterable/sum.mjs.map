{"version":3,"sources":["asynciterable/sum.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAUrD,MAAM,CAAC,KAAK,UAAU,GAAG,CACvB,MAA0B,EAC1B,WAAiD,aAAa;IAE9D,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,GAAG,IAAI,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAC;KAC7B;IAED,OAAO,GAAG,CAAC;AACb,CAAC","file":"sum.js","sourcesContent":["import { identityAsync } from '../internal/identity';\n\nexport async function sum(\n  source: AsyncIterable<number>,\n  selector?: (x: number) => number | Promise<number>\n): Promise<number>;\nexport async function sum<T>(\n  source: AsyncIterable<T>,\n  selector: (x: T) => number | Promise<number>\n): Promise<number>;\nexport async function sum(\n  source: AsyncIterable<any>,\n  selector: (x: any) => number | Promise<number> = identityAsync\n): Promise<number> {\n  let sum = 0;\n  for await (let item of source) {\n    sum += await selector(item);\n  }\n\n  return sum;\n}\n"]}