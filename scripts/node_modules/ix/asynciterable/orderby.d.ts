import { AsyncIterableX } from './asynciterablex';
export declare abstract class OrderedAsyncIterableBaseX<TSource> extends AsyncIterableX<TSource> {
    _source: AsyncIterable<TSource>;
    constructor(source: AsyncIterable<TSource>);
    [Symbol.asyncIterator](): AsyncIterableIterator<TSource>;
    thenBy<TKey>(keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableBaseX<TSource>;
    thenByDescending<TKey>(keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableBaseX<TSource>;
    abstract _getSorter(elements: TSource[], next?: (x: number, y: number) => number): (x: number, y: number) => number;
}
export declare class OrderedAsyncIterableX<TKey, TSource> extends OrderedAsyncIterableBaseX<TSource> {
    private _keySelector;
    private _comparer;
    private _descending;
    private _parent?;
    constructor(source: AsyncIterable<TSource>, keySelector: (item: TSource) => TKey, comparer: (fst: TKey, snd: TKey) => number, descending: boolean, parent?: OrderedAsyncIterableBaseX<TSource>);
    _getSorter(elements: TSource[], next?: (x: number, y: number) => number): (x: number, y: number) => number;
}
export declare function orderBy<TKey, TSource>(source: AsyncIterable<TSource>, keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableX<TKey, TSource>;
export declare function orderByDescending<TKey, TSource>(source: AsyncIterable<TSource>, keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableX<TKey, TSource>;
export declare function thenBy<TKey, TSource>(source: OrderedAsyncIterableBaseX<TSource>, keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableX<TKey, TSource>;
export declare function thenByDescending<TKey, TSource>(source: OrderedAsyncIterableBaseX<TSource>, keySelector: (item: TSource) => TKey, comparer?: (fst: TKey, snd: TKey) => number): OrderedAsyncIterableX<TKey, TSource>;
