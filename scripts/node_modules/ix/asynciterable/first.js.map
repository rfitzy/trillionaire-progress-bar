{"version":3,"sources":["asynciterable/first.ts"],"names":[],"mappings":";;AAQO,KAAK,UAAU,KAAK,CACzB,MAAwB,EACxB,YAAqE,KAAK,IAAI,EAAE,CAAC,IAAI;IAErF,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,IAAI,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC;SACb;KACF;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AAZD,sBAYC","file":"first.js","sourcesContent":["export async function first<T, S extends T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => value is S\n): Promise<S | undefined>;\nexport async function first<T>(\n  source: AsyncIterable<T>,\n  predicate?: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<T | undefined>;\nexport async function first<T>(\n  source: AsyncIterable<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean> = async () => true\n): Promise<T | undefined> {\n  let i = 0;\n  for await (let item of source) {\n    if (await predicate(item, i++)) {\n      return item;\n    }\n  }\n\n  return undefined;\n}\n"]}