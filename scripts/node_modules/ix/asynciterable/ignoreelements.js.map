{"version":3,"sources":["asynciterable/ignoreelements.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAElD,MAAa,2BAAqC,SAAQ,+BAAuB;IAG/E,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,oCAAoC;QACpC,IAAI,KAAK,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;SACjC;IACH,CAAC;CACF;AAbD,kEAaC;AAED,SAAgB,cAAc,CAAU,MAA8B;IACpE,OAAO,IAAI,2BAA2B,CAAU,MAAM,CAAC,CAAC;AAC1D,CAAC;AAFD,wCAEC","file":"ignoreelements.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class IgnoreElementsAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator](): AsyncIterator<TSource> {\n    // tslint:disable-next-line:no-empty\n    for await (let _ of this._source) {\n    }\n  }\n}\n\nexport function ignoreElements<TSource>(source: AsyncIterable<TSource>): AsyncIterableX<TSource> {\n  return new IgnoreElementsAsyncIterable<TSource>(source);\n}\n"]}