import { AsyncIterableX } from './asynciterablex';
export class ConcatAllAsyncIterable extends AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    async *[Symbol.asyncIterator]() {
        for await (let outer of this._source) {
            for await (let item of outer) {
                yield item;
            }
        }
    }
}
export function concatAll(source) {
    return new ConcatAllAsyncIterable(source);
}

//# sourceMappingURL=concatall.mjs.map
