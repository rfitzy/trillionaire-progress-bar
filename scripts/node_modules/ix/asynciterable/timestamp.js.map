{"version":3,"sources":["asynciterable/timestamp.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAOlD,MAAa,sBAAgC,SAAQ,+BAAkC;IAGrF,YAAY,MAA8B;QACxC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IACxB,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,KAAK,EAAE,MAAM,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;YACrC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;SACzC;IACH,CAAC;CACF;AAbD,wDAaC;AAED,SAAgB,SAAS,CACvB,MAA8B;IAE9B,OAAO,IAAI,sBAAsB,CAAU,MAAM,CAAC,CAAC;AACrD,CAAC;AAJD,8BAIC","file":"timestamp.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport interface Timestamp<TSource> {\n  time: number;\n  value: TSource;\n}\n\nexport class TimestampAsyncIterable<TSource> extends AsyncIterableX<Timestamp<TSource>> {\n  private _source: AsyncIterable<TSource>;\n\n  constructor(source: AsyncIterable<TSource>) {\n    super();\n    this._source = source;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const item of this._source) {\n      yield { time: Date.now(), value: item };\n    }\n  }\n}\n\nexport function timestamp<TSource>(\n  source: AsyncIterable<TSource>\n): AsyncIterableX<Timestamp<TSource>> {\n  return new TimestampAsyncIterable<TSource>(source);\n}\n"]}