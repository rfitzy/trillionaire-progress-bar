{"version":3,"sources":["asynciterable/expand.ts"],"names":[],"mappings":";;AAAA,qDAAkD;AAElD,MAAa,mBAA6B,SAAQ,+BAAuB;IAIvE,YACE,MAA8B,EAC9B,QAAsF;QAEtF,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;QAC3B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACvB,OAAO,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YACnB,IAAI,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,GAAI,EAAE;gBAC3B,IAAI,KAAK,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBACvC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACd,MAAM,IAAI,CAAC;aACZ;SACF;IACH,CAAC;CACF;AAxBD,kDAwBC;AAED,SAAgB,MAAM,CACpB,MAA8B,EAC9B,QAAsF;IAEtF,OAAO,IAAI,mBAAmB,CAAU,MAAM,EAAE,QAAQ,CAAC,CAAC;AAC5D,CAAC;AALD,wBAKC","file":"expand.js","sourcesContent":["import { AsyncIterableX } from './asynciterablex';\n\nexport class ExpandAsyncIterable<TSource> extends AsyncIterableX<TSource> {\n  private _source: AsyncIterable<TSource>;\n  private _selector: (value: TSource) => AsyncIterable<TSource> | Promise<AsyncIterable<TSource>>;\n\n  constructor(\n    source: AsyncIterable<TSource>,\n    selector: (value: TSource) => AsyncIterable<TSource> | Promise<AsyncIterable<TSource>>\n  ) {\n    super();\n    this._source = source;\n    this._selector = selector;\n  }\n\n  async *[Symbol.asyncIterator]() {\n    let q = [this._source];\n    while (q.length > 0) {\n      let src = q.shift();\n      for await (let item of src!) {\n        let items = await this._selector(item);\n        q.push(items);\n        yield item;\n      }\n    }\n  }\n}\n\nexport function expand<TSource>(\n  source: AsyncIterable<TSource>,\n  selector: (value: TSource) => AsyncIterable<TSource> | Promise<AsyncIterable<TSource>>\n): AsyncIterableX<TSource> {\n  return new ExpandAsyncIterable<TSource>(source, selector);\n}\n"]}