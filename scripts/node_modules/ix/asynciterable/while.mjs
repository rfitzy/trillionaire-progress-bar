import { AsyncIterableX } from './asynciterablex';
class WhileAsyncIterable extends AsyncIterableX {
    constructor(condition, source) {
        super();
        this._condition = condition;
        this._source = source;
    }
    async *[Symbol.asyncIterator]() {
        while (await this._condition()) {
            for await (let item of this._source) {
                yield item;
            }
        }
    }
}
export function _while(condition, source) {
    return new WhileAsyncIterable(condition, source);
}

//# sourceMappingURL=while.mjs.map
