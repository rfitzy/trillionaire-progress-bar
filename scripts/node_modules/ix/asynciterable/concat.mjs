import { AsyncIterableX } from './asynciterablex';
export class ConcatAsyncIterable extends AsyncIterableX {
    constructor(source) {
        super();
        this._source = source;
    }
    async *[Symbol.asyncIterator]() {
        for (let outer of this._source) {
            for await (let item of outer) {
                yield item;
            }
        }
    }
}
export function _concatAll(source) {
    return new ConcatAsyncIterable(source);
}
/* tslint:enable:max-line-length */
export function concat(source, ...args) {
    return new ConcatAsyncIterable([source, ...args]);
}
/* tslint:enable:max-line-length */
export function concatStatic(...args) {
    return new ConcatAsyncIterable(args);
}

//# sourceMappingURL=concat.mjs.map
