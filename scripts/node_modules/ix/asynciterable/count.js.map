{"version":3,"sources":["asynciterable/count.ts"],"names":[],"mappings":";;AAAO,KAAK,UAAU,KAAK,CACzB,MAAwB,EACxB,KAA+C,KAAK,IAAI,EAAE,CAAC,IAAI;IAE/D,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,IAAI,KAAK,EAAE,IAAI,IAAI,IAAI,MAAM,EAAE;QAC7B,IAAI,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;YAClB,CAAC,EAAE,CAAC;SACL;KACF;IAED,OAAO,CAAC,CAAC;AACX,CAAC;AAbD,sBAaC","file":"count.js","sourcesContent":["export async function count<T>(\n  source: AsyncIterable<T>,\n  fn: (value: T) => boolean | Promise<boolean> = async () => true\n): Promise<number> {\n  let i = 0;\n\n  for await (let item of source) {\n    if (await fn(item)) {\n      i++;\n    }\n  }\n\n  return i;\n}\n"]}