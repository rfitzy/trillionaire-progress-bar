{"version":3,"sources":["add/iterable-operators/find.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,8CAA2C;AAgB3C,SAAgB,SAAS,CAEvB,SAA+C,EAC/C,OAAa;IAEb,OAAO,WAAI,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxC,CAAC;AAND,8BAMC;AAED,qBAAS,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC","file":"find.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { find } from '../../iterable/find';\n\n/**\n * @ignore\n */\n\nexport function findProto<T, S extends T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => value is S,\n  thisArg?: any\n): S | undefined;\nexport function findProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): T | undefined;\nexport function findProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): T | undefined {\n  return find(this, predicate, thisArg);\n}\n\nIterableX.prototype.find = findProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    find: typeof findProto;\n  }\n}\n"]}