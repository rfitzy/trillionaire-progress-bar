{"version":3,"sources":["add/iterable-operators/average.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AACnD,OAAO,EAAE,OAAO,EAAE,MAAM,wBAAwB,CAAC;AAIjD;;GAEG;AACH,MAAM,UAAU,YAAY,CAE1B,WAA+B,QAAQ;IAEvC,OAAO,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjC,CAAC;AAED,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY,CAAC","file":"average.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { identity } from '../../internal/identity';\nimport { average } from '../../iterable/average';\n\nexport function averageProto(this: IterableX<number>, selector?: (x: number) => number): number;\nexport function averageProto<T>(this: IterableX<T>, selector?: (x: T) => number): number;\n/**\n * @ignore\n */\nexport function averageProto(\n  this: IterableX<any>,\n  selector: (x: any) => number = identity\n): number {\n  return average(this, selector);\n}\n\nIterableX.prototype.average = averageProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    average: typeof averageProto;\n  }\n}\n"]}