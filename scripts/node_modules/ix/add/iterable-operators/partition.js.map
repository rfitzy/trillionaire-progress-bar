{"version":3,"sources":["add/iterable-operators/partition.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,wDAAqD;AAgBrD,SAAgB,cAAc,CAE5B,SAA+C,EAC/C,OAAa;IAEb,OAAO,qBAAS,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAC7C,CAAC;AAND,wCAMC;AAED,qBAAS,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC","file":"partition.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { partition } from '../../iterable/partition';\n\n/**\n * @ignore\n */\n\nexport function partitionProto<T, S extends T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => value is S,\n  thisArg?: any\n): IterableX<S>[];\nexport function partitionProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): IterableX<T>[];\nexport function partitionProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): IterableX<T>[] {\n  return partition(this, predicate, thisArg);\n}\n\nIterableX.prototype.partition = partitionProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    partition: typeof partitionProto;\n  }\n}\n"]}