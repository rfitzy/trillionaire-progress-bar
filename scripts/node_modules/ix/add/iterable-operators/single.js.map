{"version":3,"sources":["add/iterable-operators/single.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,kDAA+C;AAa/C,SAAgB,WAAW,CAEzB,YAAkD,GAAG,EAAE,CAAC,IAAI;IAE5D,OAAO,eAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACjC,CAAC;AALD,kCAKC;AAED,qBAAS,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC","file":"single.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { single } from '../../iterable/single';\n\n/**\n * @ignore\n */\nexport function singleProto<T, S extends T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => value is S\n): S | undefined;\nexport function singleProto<T>(\n  this: IterableX<T>,\n  predicate?: (value: T, index: number) => boolean\n): T | undefined;\nexport function singleProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean = () => true\n): T | undefined {\n  return single(this, predicate);\n}\n\nIterableX.prototype.single = singleProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    single: typeof singleProto;\n  }\n}\n"]}