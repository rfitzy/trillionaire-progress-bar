{"version":3,"sources":["add/iterable-operators/skipwhile.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,wDAAqD;AAarD,SAAgB,cAAc,CAE5B,SAAqD;IAErD,OAAO,qBAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACpC,CAAC;AALD,wCAKC;AAED,qBAAS,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC","file":"skipwhile.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { skipWhile } from '../../iterable/skipwhile';\n\n/**\n * @ignore\n */\nexport function skipWhileProto<T, S extends T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => value is S\n): IterableX<S>;\nexport function skipWhileProto<TSource>(\n  this: IterableX<TSource>,\n  predicate: (value: TSource, index: number) => boolean\n): IterableX<TSource>;\nexport function skipWhileProto<TSource>(\n  this: IterableX<TSource>,\n  predicate: (value: TSource, index: number) => boolean\n): IterableX<TSource> {\n  return skipWhile(this, predicate);\n}\n\nIterableX.prototype.skipWhile = skipWhileProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    skipWhile: typeof skipWhileProto;\n  }\n}\n"]}