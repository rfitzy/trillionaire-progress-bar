{"version":3,"sources":["add/iterable-operators/except.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,kDAA+C;AAE/C;;GAEG;AACH,SAAgB,WAAW,CAEzB,MAAyB,EACzB,QAA8C;IAE9C,OAAO,eAAM,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACxC,CAAC;AAND,kCAMC;AAED,qBAAS,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC","file":"except.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { except } from '../../iterable/except';\n\n/**\n * @ignore\n */\nexport function exceptProto<TSource>(\n  this: IterableX<TSource>,\n  second: Iterable<TSource>,\n  comparer?: (x: TSource, y: TSource) => boolean\n): IterableX<TSource> {\n  return except(this, second, comparer);\n}\n\nIterableX.prototype.except = exceptProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    except: typeof exceptProto;\n  }\n}\n"]}