{"version":3,"sources":["add/iterable-operators/last.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,IAAI,EAAE,MAAM,qBAAqB,CAAC;AAa3C,MAAM,UAAU,SAAS,CAEvB,YAAkD,GAAG,EAAE,CAAC,IAAI;IAE5D,OAAO,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC/B,CAAC;AAED,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC","file":"last.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { last } from '../../iterable/last';\n\n/**\n * @ignore\n */\nexport function lastProto<T, S extends T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => value is S\n): S | undefined;\nexport function lastProto<T>(\n  this: IterableX<T>,\n  predicate?: (value: T, index: number) => boolean\n): T | undefined;\nexport function lastProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean = () => true\n): T | undefined {\n  return last(this, predicate);\n}\n\nIterableX.prototype.last = lastProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    last: typeof lastProto;\n  }\n}\n"]}