{"version":3,"sources":["add/iterable-operators/catchwith.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,wDAAwE;AAExE;;GAEG;AACH,SAAgB,cAAc,CAE5B,EAA+B;IAE/B,OAAO,qBAAe,CAAI,IAAI,EAAE,EAAE,CAAC,CAAC;AACtC,CAAC;AALD,wCAKC;AAED,qBAAS,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC","file":"catchwith.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { catchWith as catchWithStatic } from '../../iterable/catchwith';\n\n/**\n * @ignore\n */\nexport function catchWithProto<T>(\n  this: IterableX<T>,\n  fn: (error: any) => Iterable<T>\n): IterableX<T> {\n  return catchWithStatic<T>(this, fn);\n}\n\nIterableX.prototype.catchWith = catchWithProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    catchWith: typeof catchWithProto;\n  }\n}\n"]}