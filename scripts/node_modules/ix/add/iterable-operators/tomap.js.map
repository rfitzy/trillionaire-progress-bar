{"version":3,"sources":["add/iterable-operators/tomap.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,gDAA6C;AAW7C;;GAEG;AACH,SAAgB,UAAU,CAExB,WAAoC,EACpC,eAA6C;IAE7C,OAAO,aAAK,CAAC,IAAI,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;AACnD,CAAC;AAND,gCAMC;AAED,qBAAS,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC","file":"tomap.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { toMap } from '../../iterable/tomap';\n\nexport function toMapProto<TSource, TKey>(\n  this: IterableX<TSource>,\n  keySelector: (item: TSource) => TKey\n): Map<TKey, TSource>;\nexport function toMapProto<TSource, TKey, TElement = TSource>(\n  this: IterableX<TSource>,\n  keySelector: (item: TSource) => TKey,\n  elementSelector?: (item: TSource) => TElement\n): Map<TKey, TElement>;\n/**\n * @ignore\n */\nexport function toMapProto<TSource, TKey, TElement = TSource>(\n  this: IterableX<TSource>,\n  keySelector: (item: TSource) => TKey,\n  elementSelector?: (item: TSource) => TElement\n): Map<TKey, TElement | TSource> {\n  return toMap(this, keySelector, elementSelector);\n}\n\nIterableX.prototype.toMap = toMapProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    toMap: typeof toMapProto;\n  }\n}\n"]}