{"version":3,"sources":["add/iterable-operators/every.ts"],"names":[],"mappings":";;AAAA,wDAAqD;AACrD,gDAA6C;AAa7C,SAAgB,UAAU,CAExB,SAA+C;IAE/C,OAAO,aAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAChC,CAAC;AALD,gCAKC;AAED,qBAAS,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC","file":"every.js","sourcesContent":["import { IterableX } from '../../iterable/iterablex';\nimport { every } from '../../iterable/every';\n\n/**\n * @ignore\n */\nexport function everyProto<T, S extends T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => value is S\n): boolean;\nexport function everyProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean\n): boolean;\nexport function everyProto<T>(\n  this: IterableX<T>,\n  predicate: (value: T, index: number) => boolean\n): boolean {\n  return every(this, predicate);\n}\n\nIterableX.prototype.every = everyProto;\n\ndeclare module '../../iterable/iterablex' {\n  interface IterableX<T> {\n    every: typeof everyProto;\n  }\n}\n"]}