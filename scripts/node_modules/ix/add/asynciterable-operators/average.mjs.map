{"version":3,"sources":["add/asynciterable-operators/average.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,aAAa,EAAE,MAAM,yBAAyB,CAAC;AACxD,OAAO,EAAE,OAAO,EAAE,MAAM,6BAA6B,CAAC;AAUtD;;GAEG;AACH,MAAM,UAAU,YAAY,CAE1B,WAAiD,aAAa;IAE9D,OAAO,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjC,CAAC;AAED,cAAc,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY,CAAC","file":"average.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { identityAsync } from '../../internal/identity';\nimport { average } from '../../asynciterable/average';\n\nexport function averageProto(\n  this: AsyncIterableX<number>,\n  selector?: (x: number) => number | Promise<number>\n): Promise<number>;\nexport function averageProto<T>(\n  this: AsyncIterableX<T>,\n  selector?: (x: T) => number | Promise<number>\n): Promise<number>;\n/**\n * @ignore\n */\nexport function averageProto(\n  this: AsyncIterableX<any>,\n  selector: (x: any) => number | Promise<number> = identityAsync\n): Promise<number> {\n  return average(this, selector);\n}\n\nAsyncIterableX.prototype.average = averageProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    average: typeof averageProto;\n  }\n}\n"]}