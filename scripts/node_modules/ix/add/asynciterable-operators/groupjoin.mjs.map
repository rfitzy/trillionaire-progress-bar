{"version":3,"sources":["add/asynciterable-operators/groupjoin.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAE1D;;GAEG;AACH,MAAM,UAAU,cAAc,CAE5B,KAA4B,EAC5B,aAAsD,EACtD,aAAsD,EACtD,cAA2F;IAE3F,OAAO,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,aAAa,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC;AAC9E,CAAC;AAED,cAAc,CAAC,SAAS,CAAC,SAAS,GAAG,cAAc,CAAC","file":"groupjoin.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { groupJoin } from '../../asynciterable/groupjoin';\n\n/**\n * @ignore\n */\nexport function groupJoinProto<TOuter, TInner, TKey, TResult>(\n  this: AsyncIterableX<TOuter>,\n  inner: AsyncIterable<TInner>,\n  outerSelector: (value: TOuter) => TKey | Promise<TKey>,\n  innerSelector: (value: TInner) => TKey | Promise<TKey>,\n  resultSelector: (outer: TOuter, inner: AsyncIterable<TInner>) => TResult | Promise<TResult>\n): AsyncIterableX<TResult> {\n  return groupJoin(this, inner, outerSelector, innerSelector, resultSelector);\n}\n\nAsyncIterableX.prototype.groupJoin = groupJoinProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    groupJoin: typeof groupJoinProto;\n  }\n}\n"]}