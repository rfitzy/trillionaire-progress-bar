{"version":3,"sources":["add/asynciterable-operators/single.ts"],"names":[],"mappings":";;AAAA,uEAAoE;AACpE,uDAAoD;AAcpD,SAAgB,WAAW,CAEzB,SAAmE;IAEnE,OAAO,eAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACjC,CAAC;AALD,kCAKC;AAED,+BAAc,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC","file":"single.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { single } from '../../asynciterable/single';\n\n/**\n * @ignore\n */\n\nexport function singleProto<T, S extends T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number) => value is S\n): Promise<S | undefined>;\nexport function singleProto<T>(\n  this: AsyncIterableX<T>,\n  predicate?: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<T | undefined>;\nexport function singleProto<T>(\n  this: AsyncIterableX<T>,\n  predicate?: (value: T, index: number) => boolean | Promise<boolean>\n): Promise<T | undefined> {\n  return single(this, predicate);\n}\n\nAsyncIterableX.prototype.single = singleProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    single: typeof singleProto;\n  }\n}\n"]}