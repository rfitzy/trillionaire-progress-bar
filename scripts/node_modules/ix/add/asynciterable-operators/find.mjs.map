{"version":3,"sources":["add/asynciterable-operators/find.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,IAAI,EAAE,MAAM,0BAA0B,CAAC;AAgBhD,MAAM,UAAU,SAAS,CAEvB,SAAkE,EAClE,OAAa;IAEb,OAAO,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxC,CAAC;AAED,cAAc,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC","file":"find.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { find } from '../../asynciterable/find';\n\n/**\n * @ignore\n */\n\nexport function findProto<T, S extends T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number) => value is S,\n  thisArg?: any\n): Promise<S | undefined>;\nexport function findProto<T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>,\n  thisArg?: any\n): Promise<T | undefined>;\nexport function findProto<T>(\n  this: AsyncIterableX<T>,\n  predicate: (value: T, index: number) => boolean | Promise<boolean>,\n  thisArg?: any\n): Promise<T | undefined> {\n  return find(this, predicate, thisArg);\n}\n\nAsyncIterableX.prototype.find = findProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    find: typeof findProto;\n  }\n}\n"]}