{"version":3,"sources":["add/asynciterable-operators/except.ts"],"names":[],"mappings":";;AAAA,uEAAoE;AACpE,uDAAoD;AAEpD;;GAEG;AACH,SAAgB,WAAW,CAEzB,MAA8B,EAC9B,QAAiE;IAEjE,OAAO,eAAM,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACxC,CAAC;AAND,kCAMC;AAED,+BAAc,CAAC,SAAS,CAAC,MAAM,GAAG,WAAW,CAAC","file":"except.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { except } from '../../asynciterable/except';\n\n/**\n * @ignore\n */\nexport function exceptProto<TSource>(\n  this: AsyncIterableX<TSource>,\n  second: AsyncIterable<TSource>,\n  comparer?: (x: TSource, y: TSource) => boolean | Promise<boolean>\n): AsyncIterableX<TSource> {\n  return except(this, second, comparer);\n}\n\nAsyncIterableX.prototype.except = exceptProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    except: typeof exceptProto;\n  }\n}\n"]}