{"version":3,"sources":["add/asynciterable-operators/distinctuntilchanged.ts"],"names":[],"mappings":";;AAAA,uEAAoE;AACpE,mFAAgF;AAEhF;;GAEG;AACH,SAAgB,yBAAyB,CAEvC,WAAsD,EACtD,QAA2D;IAE3D,OAAO,2CAAoB,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC3D,CAAC;AAND,8DAMC;AAED,+BAAc,CAAC,SAAS,CAAC,oBAAoB,GAAG,yBAAyB,CAAC","file":"distinctuntilchanged.js","sourcesContent":["import { AsyncIterableX } from '../../asynciterable/asynciterablex';\nimport { distinctUntilChanged } from '../../asynciterable/distinctuntilchanged';\n\n/**\n * @ignore\n */\nexport function distinctUntilChangedProto<TSource, TKey>(\n  this: AsyncIterableX<TSource>,\n  keySelector?: (value: TSource) => TKey | Promise<TKey>,\n  comparer?: (x: TKey, y: TKey) => boolean | Promise<boolean>\n): AsyncIterableX<TSource> {\n  return distinctUntilChanged(this, keySelector, comparer);\n}\n\nAsyncIterableX.prototype.distinctUntilChanged = distinctUntilChangedProto;\n\ndeclare module '../../asynciterable/asynciterablex' {\n  interface AsyncIterableX<T> {\n    distinctUntilChanged: typeof distinctUntilChangedProto;\n  }\n}\n"]}