
// @ts-nocheck
/* tslint:disable */
/**
 * @fileoverview Closure Compiler externs for Ix
 * @externs
 * @suppress {duplicate,checkTypes}
 */
/** @type {symbol} */
Symbol.iterator;
/** @type {symbol} */
Symbol.observable;
/** @type {symbol} */
Symbol.asyncIterator;

var iterable = function() {};
/** @type {?} */
iterable.IterableX = function() {};
/** @type {?} */
iterable._case = function() {};
/** @type {?} */
iterable._catch = function() {};
/** @type {?} */
iterable._catchStatic = function() {};
/** @type {?} */
iterable._finally = function() {};
/** @type {?} */
iterable._for = function() {};
/** @type {?} */
iterable._if = function() {};
/** @type {?} */
iterable._throw = function() {};
/** @type {?} */
iterable._while = function() {};
/** @type {?} */
iterable.average = function() {};
/** @type {?} */
iterable.buffer = function() {};
/** @type {?} */
iterable.catchWith = function() {};
/** @type {?} */
iterable.chain = function() {};
/** @type {?} */
iterable.concat = function() {};
/** @type {?} */
iterable.concatAll = function() {};
/** @type {?} */
iterable.concatStatic = function() {};
/** @type {?} */
iterable.count = function() {};
/** @type {?} */
iterable.create = function() {};
/** @type {?} */
iterable.defaultIfEmpty = function() {};
/** @type {?} */
iterable.defer = function() {};
/** @type {?} */
iterable.distinct = function() {};
/** @type {?} */
iterable.distinctUntilChanged = function() {};
/** @type {?} */
iterable.doWhile = function() {};
/** @type {?} */
iterable.elementAt = function() {};
/** @type {?} */
iterable.empty = function() {};
/** @type {?} */
iterable.endWith = function() {};
/** @type {?} */
iterable.every = function() {};
/** @type {?} */
iterable.except = function() {};
/** @type {?} */
iterable.expand = function() {};
/** @type {?} */
iterable.filter = function() {};
/** @type {?} */
iterable.find = function() {};
/** @type {?} */
iterable.findIndex = function() {};
/** @type {?} */
iterable.first = function() {};
/** @type {?} */
iterable.flatMap = function() {};
/** @type {?} */
iterable.flatten = function() {};
/** @type {?} */
iterable.generate = function() {};
/** @type {?} */
iterable.groupBy = function() {};
/** @type {?} */
iterable.groupJoin = function() {};
/** @type {?} */
iterable.ignoreElements = function() {};
/** @type {?} */
iterable.includes = function() {};
/** @type {?} */
iterable.innerJoin = function() {};
/** @type {?} */
iterable.intersect = function() {};
/** @type {?} */
iterable.isEmpty = function() {};
/** @type {?} */
iterable.last = function() {};
/** @type {?} */
iterable.map = function() {};
/** @type {?} */
iterable.max = function() {};
/** @type {?} */
iterable.maxBy = function() {};
/** @type {?} */
iterable.memoize = function() {};
/** @type {?} */
iterable.min = function() {};
/** @type {?} */
iterable.minBy = function() {};
/** @type {?} */
iterable.ofEntries = function() {};
/** @type {?} */
iterable.ofKeys = function() {};
/** @type {?} */
iterable.ofValues = function() {};
/** @type {?} */
iterable.onErrorResumeNext = function() {};
/** @type {?} */
iterable.orderBy = function() {};
/** @type {?} */
iterable.orderByDescending = function() {};
/** @type {?} */
iterable.pairwise = function() {};
/** @type {?} */
iterable.partition = function() {};
/** @type {?} */
iterable.pipe = function() {};
/** @type {?} */
iterable.pluck = function() {};
/** @type {?} */
iterable.publish = function() {};
/** @type {?} */
iterable.range = function() {};
/** @type {?} */
iterable.reduce = function() {};
/** @type {?} */
iterable.reduceRight = function() {};
/** @type {?} */
iterable.repeat = function() {};
/** @type {?} */
iterable.repeatStatic = function() {};
/** @type {?} */
iterable.retry = function() {};
/** @type {?} */
iterable.reverse = function() {};
/** @type {?} */
iterable.scan = function() {};
/** @type {?} */
iterable.scanRight = function() {};
/** @type {?} */
iterable.sequenceEqual = function() {};
/** @type {?} */
iterable.share = function() {};
/** @type {?} */
iterable.single = function() {};
/** @type {?} */
iterable.skip = function() {};
/** @type {?} */
iterable.skipLast = function() {};
/** @type {?} */
iterable.skipWhile = function() {};
/** @type {?} */
iterable.slice = function() {};
/** @type {?} */
iterable.some = function() {};
/** @type {?} */
iterable.startWith = function() {};
/** @type {?} */
iterable.sum = function() {};
/** @type {?} */
iterable.take = function() {};
/** @type {?} */
iterable.takeLast = function() {};
/** @type {?} */
iterable.takeWhile = function() {};
/** @type {?} */
iterable.tap = function() {};
/** @type {?} */
iterable.thenBy = function() {};
/** @type {?} */
iterable.thenByDescending = function() {};
/** @type {?} */
iterable.toArray = function() {};
/** @type {?} */
iterable.toDOMStream = function() {};
/** @type {?} */
iterable.toMap = function() {};
/** @type {?} */
iterable.toSet = function() {};
/** @type {?} */
iterable.union = function() {};
/** @type {?} */
iterable.zip = function() {};
var iterablePipe = function() {};
/** @type {?} */
iterablePipe._catch = function() {};
/** @type {?} */
iterablePipe._finally = function() {};
/** @type {?} */
iterablePipe.buffer = function() {};
/** @type {?} */
iterablePipe.catchWith = function() {};
/** @type {?} */
iterablePipe.concat = function() {};
/** @type {?} */
iterablePipe.concatAll = function() {};
/** @type {?} */
iterablePipe.defaultIfEmpty = function() {};
/** @type {?} */
iterablePipe.distinct = function() {};
/** @type {?} */
iterablePipe.distinctUntilChanged = function() {};
/** @type {?} */
iterablePipe.doWhile = function() {};
/** @type {?} */
iterablePipe.endWith = function() {};
/** @type {?} */
iterablePipe.except = function() {};
/** @type {?} */
iterablePipe.expand = function() {};
/** @type {?} */
iterablePipe.filter = function() {};
/** @type {?} */
iterablePipe.flatMap = function() {};
/** @type {?} */
iterablePipe.flatten = function() {};
/** @type {?} */
iterablePipe.groupBy = function() {};
/** @type {?} */
iterablePipe.groupJoin = function() {};
/** @type {?} */
iterablePipe.ignoreElements = function() {};
/** @type {?} */
iterablePipe.innerJoin = function() {};
/** @type {?} */
iterablePipe.intersect = function() {};
/** @type {?} */
iterablePipe.map = function() {};
/** @type {?} */
iterablePipe.maxBy = function() {};
/** @type {?} */
iterablePipe.memoize = function() {};
/** @type {?} */
iterablePipe.minBy = function() {};
/** @type {?} */
iterablePipe.onErrorResumeNext = function() {};
/** @type {?} */
iterablePipe.orderBy = function() {};
/** @type {?} */
iterablePipe.orderByDescending = function() {};
/** @type {?} */
iterablePipe.pairwise = function() {};
/** @type {?} */
iterablePipe.pluck = function() {};
/** @type {?} */
iterablePipe.publish = function() {};
/** @type {?} */
iterablePipe.repeat = function() {};
/** @type {?} */
iterablePipe.retry = function() {};
/** @type {?} */
iterablePipe.reverse = function() {};
/** @type {?} */
iterablePipe.scan = function() {};
/** @type {?} */
iterablePipe.scanRight = function() {};
/** @type {?} */
iterablePipe.share = function() {};
/** @type {?} */
iterablePipe.skip = function() {};
/** @type {?} */
iterablePipe.skipLast = function() {};
/** @type {?} */
iterablePipe.skipWhile = function() {};
/** @type {?} */
iterablePipe.slice = function() {};
/** @type {?} */
iterablePipe.startWith = function() {};
/** @type {?} */
iterablePipe.take = function() {};
/** @type {?} */
iterablePipe.takeLast = function() {};
/** @type {?} */
iterablePipe.takeWhile = function() {};
/** @type {?} */
iterablePipe.tap = function() {};
/** @type {?} */
iterablePipe.thenBy = function() {};
/** @type {?} */
iterablePipe.thenByDescending = function() {};
/** @type {?} */
iterablePipe.toDOMStream = function() {};
/** @type {?} */
iterablePipe.union = function() {};
/** @type {?} */
iterablePipe.zip = function() {};
var asynciterable = function() {};
/** @type {?} */
asynciterable.AsyncIterableX = function() {};
/** @type {?} */
asynciterable._case = function() {};
/** @type {?} */
asynciterable._catch = function() {};
/** @type {?} */
asynciterable._catchStatic = function() {};
/** @type {?} */
asynciterable._finally = function() {};
/** @type {?} */
asynciterable._for = function() {};
/** @type {?} */
asynciterable._if = function() {};
/** @type {?} */
asynciterable._throw = function() {};
/** @type {?} */
asynciterable._while = function() {};
/** @type {?} */
asynciterable.asyncify = function() {};
/** @type {?} */
asynciterable.asyncifyErrback = function() {};
/** @type {?} */
asynciterable.average = function() {};
/** @type {?} */
asynciterable.batch = function() {};
/** @type {?} */
asynciterable.buffer = function() {};
/** @type {?} */
asynciterable.catchWith = function() {};
/** @type {?} */
asynciterable.chain = function() {};
/** @type {?} */
asynciterable.combineLatest = function() {};
/** @type {?} */
asynciterable.concat = function() {};
/** @type {?} */
asynciterable.concatAll = function() {};
/** @type {?} */
asynciterable.concatStatic = function() {};
/** @type {?} */
asynciterable.count = function() {};
/** @type {?} */
asynciterable.create = function() {};
/** @type {?} */
asynciterable.debounce = function() {};
/** @type {?} */
asynciterable.defaultIfEmpty = function() {};
/** @type {?} */
asynciterable.defer = function() {};
/** @type {?} */
asynciterable.distinct = function() {};
/** @type {?} */
asynciterable.distinctUntilChanged = function() {};
/** @type {?} */
asynciterable.doWhile = function() {};
/** @type {?} */
asynciterable.elementAt = function() {};
/** @type {?} */
asynciterable.empty = function() {};
/** @type {?} */
asynciterable.endWith = function() {};
/** @type {?} */
asynciterable.every = function() {};
/** @type {?} */
asynciterable.except = function() {};
/** @type {?} */
asynciterable.expand = function() {};
/** @type {?} */
asynciterable.filter = function() {};
/** @type {?} */
asynciterable.find = function() {};
/** @type {?} */
asynciterable.findIndex = function() {};
/** @type {?} */
asynciterable.first = function() {};
/** @type {?} */
asynciterable.flatMap = function() {};
/** @type {?} */
asynciterable.flatten = function() {};
/** @type {?} */
asynciterable.forkJoin = function() {};
/** @type {?} */
asynciterable.fromEvent = function() {};
/** @type {?} */
asynciterable.fromEventPattern = function() {};
/** @type {?} */
asynciterable.generate = function() {};
/** @type {?} */
asynciterable.generateTime = function() {};
/** @type {?} */
asynciterable.groupBy = function() {};
/** @type {?} */
asynciterable.groupJoin = function() {};
/** @type {?} */
asynciterable.ignoreElements = function() {};
/** @type {?} */
asynciterable.includes = function() {};
/** @type {?} */
asynciterable.innerJoin = function() {};
/** @type {?} */
asynciterable.intersect = function() {};
/** @type {?} */
asynciterable.isEmpty = function() {};
/** @type {?} */
asynciterable.last = function() {};
/** @type {?} */
asynciterable.map = function() {};
/** @type {?} */
asynciterable.max = function() {};
/** @type {?} */
asynciterable.maxBy = function() {};
/** @type {?} */
asynciterable.memoize = function() {};
/** @type {?} */
asynciterable.merge = function() {};
/** @type {?} */
asynciterable.mergeAll = function() {};
/** @type {?} */
asynciterable.min = function() {};
/** @type {?} */
asynciterable.minBy = function() {};
/** @type {?} */
asynciterable.ofEntries = function() {};
/** @type {?} */
asynciterable.ofKeys = function() {};
/** @type {?} */
asynciterable.ofValues = function() {};
/** @type {?} */
asynciterable.onErrorResumeNext = function() {};
/** @type {?} */
asynciterable.onErrorResumeNextStatic = function() {};
/** @type {?} */
asynciterable.orderBy = function() {};
/** @type {?} */
asynciterable.orderByDescending = function() {};
/** @type {?} */
asynciterable.pairwise = function() {};
/** @type {?} */
asynciterable.partition = function() {};
/** @type {?} */
asynciterable.pluck = function() {};
/** @type {?} */
asynciterable.publish = function() {};
/** @type {?} */
asynciterable.race = function() {};
/** @type {?} */
asynciterable.range = function() {};
/** @type {?} */
asynciterable.reduce = function() {};
/** @type {?} */
asynciterable.reduceRight = function() {};
/** @type {?} */
asynciterable.repeat = function() {};
/** @type {?} */
asynciterable.repeatStatic = function() {};
/** @type {?} */
asynciterable.retry = function() {};
/** @type {?} */
asynciterable.reverse = function() {};
/** @type {?} */
asynciterable.scan = function() {};
/** @type {?} */
asynciterable.scanRight = function() {};
/** @type {?} */
asynciterable.sequenceEqual = function() {};
/** @type {?} */
asynciterable.share = function() {};
/** @type {?} */
asynciterable.single = function() {};
/** @type {?} */
asynciterable.skip = function() {};
/** @type {?} */
asynciterable.skipLast = function() {};
/** @type {?} */
asynciterable.skipUntil = function() {};
/** @type {?} */
asynciterable.skipWhile = function() {};
/** @type {?} */
asynciterable.slice = function() {};
/** @type {?} */
asynciterable.some = function() {};
/** @type {?} */
asynciterable.startWith = function() {};
/** @type {?} */
asynciterable.sum = function() {};
/** @type {?} */
asynciterable.take = function() {};
/** @type {?} */
asynciterable.takeLast = function() {};
/** @type {?} */
asynciterable.takeUntil = function() {};
/** @type {?} */
asynciterable.takeWhile = function() {};
/** @type {?} */
asynciterable.tap = function() {};
/** @type {?} */
asynciterable.thenBy = function() {};
/** @type {?} */
asynciterable.thenByDescending = function() {};
/** @type {?} */
asynciterable.throttle = function() {};
/** @type {?} */
asynciterable.timeInterval = function() {};
/** @type {?} */
asynciterable.timeout = function() {};
/** @type {?} */
asynciterable.timestamp = function() {};
/** @type {?} */
asynciterable.toArray = function() {};
/** @type {?} */
asynciterable.toDOMStream = function() {};
/** @type {?} */
asynciterable.toMap = function() {};
/** @type {?} */
asynciterable.toObservable = function() {};
/** @type {?} */
asynciterable.toSet = function() {};
/** @type {?} */
asynciterable.union = function() {};
/** @type {?} */
asynciterable.zip = function() {};
var asynciterablePipe = function() {};
/** @type {?} */
asynciterablePipe._catch = function() {};
/** @type {?} */
asynciterablePipe._finally = function() {};
/** @type {?} */
asynciterablePipe.buffer = function() {};
/** @type {?} */
asynciterablePipe.catchWith = function() {};
/** @type {?} */
asynciterablePipe.concat = function() {};
/** @type {?} */
asynciterablePipe.concatAll = function() {};
/** @type {?} */
asynciterablePipe.debounce = function() {};
/** @type {?} */
asynciterablePipe.defaultIfEmpty = function() {};
/** @type {?} */
asynciterablePipe.delay = function() {};
/** @type {?} */
asynciterablePipe.delayEach = function() {};
/** @type {?} */
asynciterablePipe.distinct = function() {};
/** @type {?} */
asynciterablePipe.distinctUntilChanged = function() {};
/** @type {?} */
asynciterablePipe.doWhile = function() {};
/** @type {?} */
asynciterablePipe.endWith = function() {};
/** @type {?} */
asynciterablePipe.except = function() {};
/** @type {?} */
asynciterablePipe.expand = function() {};
/** @type {?} */
asynciterablePipe.filter = function() {};
/** @type {?} */
asynciterablePipe.flatMap = function() {};
/** @type {?} */
asynciterablePipe.flatten = function() {};
/** @type {?} */
asynciterablePipe.groupBy = function() {};
/** @type {?} */
asynciterablePipe.groupJoin = function() {};
/** @type {?} */
asynciterablePipe.ignoreElements = function() {};
/** @type {?} */
asynciterablePipe.innerJoin = function() {};
/** @type {?} */
asynciterablePipe.intersect = function() {};
/** @type {?} */
asynciterablePipe.map = function() {};
/** @type {?} */
asynciterablePipe.maxBy = function() {};
/** @type {?} */
asynciterablePipe.memoize = function() {};
/** @type {?} */
asynciterablePipe.merge = function() {};
/** @type {?} */
asynciterablePipe.mergeAll = function() {};
/** @type {?} */
asynciterablePipe.minBy = function() {};
/** @type {?} */
asynciterablePipe.onErrorResumeNext = function() {};
/** @type {?} */
asynciterablePipe.orderBy = function() {};
/** @type {?} */
asynciterablePipe.orderByDescending = function() {};
/** @type {?} */
asynciterablePipe.pairwise = function() {};
/** @type {?} */
asynciterablePipe.pluck = function() {};
/** @type {?} */
asynciterablePipe.publish = function() {};
/** @type {?} */
asynciterablePipe.repeat = function() {};
/** @type {?} */
asynciterablePipe.retry = function() {};
/** @type {?} */
asynciterablePipe.reverse = function() {};
/** @type {?} */
asynciterablePipe.scan = function() {};
/** @type {?} */
asynciterablePipe.scanRight = function() {};
/** @type {?} */
asynciterablePipe.share = function() {};
/** @type {?} */
asynciterablePipe.skip = function() {};
/** @type {?} */
asynciterablePipe.skipLast = function() {};
/** @type {?} */
asynciterablePipe.skipUntil = function() {};
/** @type {?} */
asynciterablePipe.skipWhile = function() {};
/** @type {?} */
asynciterablePipe.slice = function() {};
/** @type {?} */
asynciterablePipe.startWith = function() {};
/** @type {?} */
asynciterablePipe.take = function() {};
/** @type {?} */
asynciterablePipe.takeLast = function() {};
/** @type {?} */
asynciterablePipe.takeUntil = function() {};
/** @type {?} */
asynciterablePipe.takeWhile = function() {};
/** @type {?} */
asynciterablePipe.tap = function() {};
/** @type {?} */
asynciterablePipe.thenBy = function() {};
/** @type {?} */
asynciterablePipe.thenByDescending = function() {};
/** @type {?} */
asynciterablePipe.throttle = function() {};
/** @type {?} */
asynciterablePipe.timeInterval = function() {};
/** @type {?} */
asynciterablePipe.timeout = function() {};
/** @type {?} */
asynciterablePipe.timestamp = function() {};
/** @type {?} */
asynciterablePipe.toDOMStream = function() {};
/** @type {?} */
asynciterablePipe.union = function() {};
/** @type {?} */
asynciterablePipe.zip = function() {};
var OrderedIterable = function() {};
/** @type {?} */
OrderedIterable.prototype._getSorter;
var OrderedIterableBase = function() {};
/** @type {?} */
OrderedIterableBase.prototype.thenBy;
/** @type {?} */
OrderedIterableBase.prototype.thenByDescending;
var OrderedAsyncIterable = function() {};
/** @type {?} */
OrderedAsyncIterable.prototype._getSorter;
var OrderedAsyncIterableBase = function() {};
/** @type {?} */
OrderedAsyncIterableBase.prototype.thenBy;
/** @type {?} */
OrderedAsyncIterableBase.prototype.thenByDescending;
var AsyncSink = function() {};
/** @type {?} */
AsyncSink.prototype.write;
/** @type {?} */
AsyncSink.prototype.error;
/** @type {?} */
AsyncSink.prototype._push;
/** @type {?} */
AsyncSink.prototype.next;
/** @type {?} */
AsyncSink.prototype.end;
var Iterable = function() {};
/** @type {?} */
Iterable.as = function() {};
/** @type {?} */
Iterable.from = function() {};
/** @type {?} */
Iterable.of = function() {};
/** @type {?} */
Iterable.case = function() {};
/** @type {?} */
Iterable.catch = function() {};
/** @type {?} */
Iterable.concat = function() {};
/** @type {?} */
Iterable.create = function() {};
/** @type {?} */
Iterable.defer = function() {};
/** @type {?} */
Iterable.empty = function() {};
/** @type {?} */
Iterable.for = function() {};
/** @type {?} */
Iterable.generate = function() {};
/** @type {?} */
Iterable.if = function() {};
/** @type {?} */
Iterable.ofEntries = function() {};
/** @type {?} */
Iterable.ofKeys = function() {};
/** @type {?} */
Iterable.ofValues = function() {};
/** @type {?} */
Iterable.onErrorResumeNext = function() {};
/** @type {?} */
Iterable.range = function() {};
/** @type {?} */
Iterable.repeat = function() {};
/** @type {?} */
Iterable.throw = function() {};
/** @type {?} */
Iterable.while = function() {};
/** @type {?} */
Iterable.zip = function() {};
/** @type {?} */
Iterable.prototype.forEach;
/** @type {?} */
Iterable.prototype.pipe;
/** @type {?} */
Iterable.prototype.tee;
/** @type {?} */
Iterable.prototype.pipeTo;
/** @type {?} */
Iterable.prototype.pipeThrough;
/** @type {?} */
Iterable.prototype._getDOMStream;
/** @type {?} */
Iterable.prototype.publish;
/** @type {?} */
Iterable.prototype.toDOMStream;
/** @type {?} */
Iterable.prototype.average;
/** @type {?} */
Iterable.prototype.buffer;
/** @type {?} */
Iterable.prototype.catch;
/** @type {?} */
Iterable.prototype.catchWith;
/** @type {?} */
Iterable.prototype.chain;
/** @type {?} */
Iterable.prototype.concatAll;
/** @type {?} */
Iterable.prototype.concat;
/** @type {?} */
Iterable.prototype.count;
/** @type {?} */
Iterable.prototype.defaultIfEmpty;
/** @type {?} */
Iterable.prototype.distinct;
/** @type {?} */
Iterable.prototype.distinctUntilChanged;
/** @type {?} */
Iterable.prototype.doWhile;
/** @type {?} */
Iterable.prototype.elementAt;
/** @type {?} */
Iterable.prototype.endWith;
/** @type {?} */
Iterable.prototype.every;
/** @type {?} */
Iterable.prototype.except;
/** @type {?} */
Iterable.prototype.expand;
/** @type {?} */
Iterable.prototype.filter;
/** @type {?} */
Iterable.prototype.finally;
/** @type {?} */
Iterable.prototype.findIndex;
/** @type {?} */
Iterable.prototype.find;
/** @type {?} */
Iterable.prototype.first;
/** @type {?} */
Iterable.prototype.flatMap;
/** @type {?} */
Iterable.prototype.flatten;
/** @type {?} */
Iterable.prototype.groupBy;
/** @type {?} */
Iterable.prototype.groupJoin;
/** @type {?} */
Iterable.prototype.ignoreElements;
/** @type {?} */
Iterable.prototype.includes;
/** @type {?} */
Iterable.prototype.innerJoin;
/** @type {?} */
Iterable.prototype.intersect;
/** @type {?} */
Iterable.prototype.isEmpty;
/** @type {?} */
Iterable.prototype.last;
/** @type {?} */
Iterable.prototype.map;
/** @type {?} */
Iterable.prototype.maxBy;
/** @type {?} */
Iterable.prototype.max;
/** @type {?} */
Iterable.prototype.memoize;
/** @type {?} */
Iterable.prototype.minBy;
/** @type {?} */
Iterable.prototype.min;
/** @type {?} */
Iterable.prototype.onErrorResumeNext;
/** @type {?} */
Iterable.prototype.orderBy;
/** @type {?} */
Iterable.prototype.orderByDescending;
/** @type {?} */
Iterable.prototype.pairwise;
/** @type {?} */
Iterable.prototype.partition;
/** @type {?} */
Iterable.prototype.pluck;
/** @type {?} */
Iterable.prototype.reduceRight;
/** @type {?} */
Iterable.prototype.reduce;
/** @type {?} */
Iterable.prototype.repeat;
/** @type {?} */
Iterable.prototype.retry;
/** @type {?} */
Iterable.prototype.reverse;
/** @type {?} */
Iterable.prototype.scanRight;
/** @type {?} */
Iterable.prototype.scan;
/** @type {?} */
Iterable.prototype.sequenceEqual;
/** @type {?} */
Iterable.prototype.share;
/** @type {?} */
Iterable.prototype.single;
/** @type {?} */
Iterable.prototype.skipLast;
/** @type {?} */
Iterable.prototype.skip;
/** @type {?} */
Iterable.prototype.skipWhile;
/** @type {?} */
Iterable.prototype.slice;
/** @type {?} */
Iterable.prototype.some;
/** @type {?} */
Iterable.prototype.startWith;
/** @type {?} */
Iterable.prototype.sum;
/** @type {?} */
Iterable.prototype.takeLast;
/** @type {?} */
Iterable.prototype.take;
/** @type {?} */
Iterable.prototype.takeWhile;
/** @type {?} */
Iterable.prototype.tap;
/** @type {?} */
Iterable.prototype.toArray;
/** @type {?} */
Iterable.prototype.toMap;
/** @type {?} */
Iterable.prototype.toSet;
/** @type {?} */
Iterable.prototype.union;
/** @type {?} */
Iterable.prototype.zip;
var AsyncIterable = function() {};
/** @type {?} */
AsyncIterable.as = function() {};
/** @type {?} */
AsyncIterable.from = function() {};
/** @type {?} */
AsyncIterable.of = function() {};
/** @type {?} */
AsyncIterable.asyncifyErrback = function() {};
/** @type {?} */
AsyncIterable.asyncify = function() {};
/** @type {?} */
AsyncIterable.case = function() {};
/** @type {?} */
AsyncIterable.catch = function() {};
/** @type {?} */
AsyncIterable.combineLatest = function() {};
/** @type {?} */
AsyncIterable.concat = function() {};
/** @type {?} */
AsyncIterable.create = function() {};
/** @type {?} */
AsyncIterable.defer = function() {};
/** @type {?} */
AsyncIterable.empty = function() {};
/** @type {?} */
AsyncIterable.forkJoin = function() {};
/** @type {?} */
AsyncIterable.for = function() {};
/** @type {?} */
AsyncIterable.fromEventPattern = function() {};
/** @type {?} */
AsyncIterable.fromEvent = function() {};
/** @type {?} */
AsyncIterable.generateTime = function() {};
/** @type {?} */
AsyncIterable.generate = function() {};
/** @type {?} */
AsyncIterable.if = function() {};
/** @type {?} */
AsyncIterable.merge = function() {};
/** @type {?} */
AsyncIterable.ofEntries = function() {};
/** @type {?} */
AsyncIterable.ofKeys = function() {};
/** @type {?} */
AsyncIterable.onErrorResumeNext = function() {};
/** @type {?} */
AsyncIterable.race = function() {};
/** @type {?} */
AsyncIterable.range = function() {};
/** @type {?} */
AsyncIterable.repeat = function() {};
/** @type {?} */
AsyncIterable.throw = function() {};
/** @type {?} */
AsyncIterable.while = function() {};
/** @type {?} */
AsyncIterable.zip = function() {};
/** @type {?} */
AsyncIterable.fromDOMStream = function() {};
/** @type {?} */
AsyncIterable.prototype.forEach;
/** @type {?} */
AsyncIterable.prototype.pipe;
/** @type {?} */
AsyncIterable.prototype.tee;
/** @type {?} */
AsyncIterable.prototype.pipeTo;
/** @type {?} */
AsyncIterable.prototype.pipeThrough;
/** @type {?} */
AsyncIterable.prototype._getDOMStream;
/** @type {?} */
AsyncIterable.prototype.publish;
/** @type {?} */
AsyncIterable.prototype.toDOMStream;
/** @type {?} */
AsyncIterable.prototype.average;
/** @type {?} */
AsyncIterable.prototype.batch;
/** @type {?} */
AsyncIterable.prototype.buffer;
/** @type {?} */
AsyncIterable.prototype.catch;
/** @type {?} */
AsyncIterable.prototype.catchWith;
/** @type {?} */
AsyncIterable.prototype.chain;
/** @type {?} */
AsyncIterable.prototype.combineLatest;
/** @type {?} */
AsyncIterable.prototype.concatAll;
/** @type {?} */
AsyncIterable.prototype.concat;
/** @type {?} */
AsyncIterable.prototype.count;
/** @type {?} */
AsyncIterable.prototype.debounce;
/** @type {?} */
AsyncIterable.prototype.defaultIfEmpty;
/** @type {?} */
AsyncIterable.prototype.distinct;
/** @type {?} */
AsyncIterable.prototype.distinctUntilChanged;
/** @type {?} */
AsyncIterable.prototype.doWhile;
/** @type {?} */
AsyncIterable.prototype.elementAt;
/** @type {?} */
AsyncIterable.prototype.endWith;
/** @type {?} */
AsyncIterable.prototype.every;
/** @type {?} */
AsyncIterable.prototype.except;
/** @type {?} */
AsyncIterable.prototype.expand;
/** @type {?} */
AsyncIterable.prototype.filter;
/** @type {?} */
AsyncIterable.prototype.finally;
/** @type {?} */
AsyncIterable.prototype.findIndex;
/** @type {?} */
AsyncIterable.prototype.find;
/** @type {?} */
AsyncIterable.prototype.first;
/** @type {?} */
AsyncIterable.prototype.flatMap;
/** @type {?} */
AsyncIterable.prototype.flatten;
/** @type {?} */
AsyncIterable.prototype.forkJoin;
/** @type {?} */
AsyncIterable.prototype.groupBy;
/** @type {?} */
AsyncIterable.prototype.groupJoin;
/** @type {?} */
AsyncIterable.prototype.ignoreElements;
/** @type {?} */
AsyncIterable.prototype.includes;
/** @type {?} */
AsyncIterable.prototype.innerJoin;
/** @type {?} */
AsyncIterable.prototype.intersect;
/** @type {?} */
AsyncIterable.prototype.isEmpty;
/** @type {?} */
AsyncIterable.prototype.last;
/** @type {?} */
AsyncIterable.prototype.map;
/** @type {?} */
AsyncIterable.prototype.maxBy;
/** @type {?} */
AsyncIterable.prototype.max;
/** @type {?} */
AsyncIterable.prototype.memoize;
/** @type {?} */
AsyncIterable.prototype.mergeAll;
/** @type {?} */
AsyncIterable.prototype.merge;
/** @type {?} */
AsyncIterable.prototype.minBy;
/** @type {?} */
AsyncIterable.prototype.min;
/** @type {?} */
AsyncIterable.prototype.onErrorResumeNext;
/** @type {?} */
AsyncIterable.prototype.orderBy;
/** @type {?} */
AsyncIterable.prototype.orderByDescending;
/** @type {?} */
AsyncIterable.prototype.pairwise;
/** @type {?} */
AsyncIterable.prototype.partition;
/** @type {?} */
AsyncIterable.prototype.pluck;
/** @type {?} */
AsyncIterable.prototype.reduceRight;
/** @type {?} */
AsyncIterable.prototype.reduce;
/** @type {?} */
AsyncIterable.prototype.repeat;
/** @type {?} */
AsyncIterable.prototype.retry;
/** @type {?} */
AsyncIterable.prototype.reverse;
/** @type {?} */
AsyncIterable.prototype.scanRight;
/** @type {?} */
AsyncIterable.prototype.scan;
/** @type {?} */
AsyncIterable.prototype.sequenceEqual;
/** @type {?} */
AsyncIterable.prototype.share;
/** @type {?} */
AsyncIterable.prototype.single;
/** @type {?} */
AsyncIterable.prototype.skipLast;
/** @type {?} */
AsyncIterable.prototype.skip;
/** @type {?} */
AsyncIterable.prototype.skipUntil;
/** @type {?} */
AsyncIterable.prototype.skipWhile;
/** @type {?} */
AsyncIterable.prototype.slice;
/** @type {?} */
AsyncIterable.prototype.some;
/** @type {?} */
AsyncIterable.prototype.startWith;
/** @type {?} */
AsyncIterable.prototype.sum;
/** @type {?} */
AsyncIterable.prototype.takeLast;
/** @type {?} */
AsyncIterable.prototype.take;
/** @type {?} */
AsyncIterable.prototype.takeUntil;
/** @type {?} */
AsyncIterable.prototype.takeWhile;
/** @type {?} */
AsyncIterable.prototype.tap;
/** @type {?} */
AsyncIterable.prototype.throttle;
/** @type {?} */
AsyncIterable.prototype.toArray;
/** @type {?} */
AsyncIterable.prototype.toMap;
/** @type {?} */
AsyncIterable.prototype.toObservable;
/** @type {?} */
AsyncIterable.prototype.toSet;
/** @type {?} */
AsyncIterable.prototype.union;
/** @type {?} */
AsyncIterable.prototype.zip;
var fromDOMStream = function() {};
var AsyncIterableReadableStream = function() {};
var AsyncIterableReadableByteStream = function() {};